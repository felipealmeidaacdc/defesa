/*
 * Copyright 2018 Aluno.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package view;

import com.itextpdf.text.Element;
import dao.VendaDAO;
import dao.VendaItemDAO;
import dao.ClienteDAO;
import dao.ProdutoDAO;
import dao.TipoProdutoDAO;
import dao.RecebimentoDAO;
import dao.TipoMovimentacaoDAO;
import model.Venda;
import model.VendaItem;
import model.Cliente;
import model.Produto;
import model.Recebimento;
import model.TipoMovimentacao;
import pdf.PdfDocument;
import pdf.PdfTable;
import swing.PromptComboBoxRenderer;
import swing.event.MyMouseAdapter;
import values.SoftConfig;

import com.towel.bind.Binder;
import com.towel.bind.annotation.AnnotatedBinder;
import com.towel.bind.annotation.Form;
import com.towel.bind.annotation.Bindable;
import com.towel.el.annotation.AnnotationResolver;
import com.towel.swing.combo.ObjectComboBoxModel;
import com.towel.swing.table.ObjectTableModel;

import java.awt.Desktop;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.text.BadLocationException;

import org.hibernate.HibernateException;

/**
 *
 * @author Aluno
 */
@Form(Venda.class)
public class VendaView extends javax.swing.JDialog {
    
    private boolean existeItem;
    private Venda mVenda;
    private VendaItem mVendaItem;
    private Recebimento mRecebimento;
    private ResourceBundle bundle;
    private Binder binder;
    
    /** Creates new form VendaView
     * @param owner
     * @param modal */
    public VendaView(java.awt.Frame owner, boolean modal) {
        super(owner, modal);
        init();
    } // Fim do m√©todo construtor VendaView

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultarCliente = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbFiltroCliente = new javax.swing.JComboBox<>();
        btConsultarCliente = new javax.swing.JButton();
        txtConsultaCliente = new javax.swing.JCTextField();
        scrollPaneCliente = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        btSelecionarCliente = new javax.swing.JButton();
        btCancelarConsultaCliente = new javax.swing.JButton();
        consultarProduto = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        cbFiltroProduto = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        txtConsultaProduto = new javax.swing.JCTextField();
        cbTipo = new javax.swing.JComboBox<>();
        btConsultarProduto = new javax.swing.JButton();
        scrollPaneProduto = new javax.swing.JScrollPane();
        tabelaProduto = new javax.swing.JTable();
        lblQtd = new javax.swing.JLabel();
        spnQtd = new javax.swing.JSpinner();
        btSelecionarProduto = new javax.swing.JButton();
        btCancelarConsultaProduto = new javax.swing.JButton();
        alterarItem = new javax.swing.JDialog();
        lblProduto = new javax.swing.JLabel();
        txtProduto = new javax.swing.JCTextField();
        lblQtd1 = new javax.swing.JLabel();
        spnQtd1 = new javax.swing.JSpinner();
        btConfirmarAlterarItem = new javax.swing.JButton();
        btCancelarAlterarItem = new javax.swing.JButton();
        recebimento = new javax.swing.JDialog();
        lblTipoMovimentacao = new javax.swing.JLabel();
        cbTipoMovimentacao = new javax.swing.JComboBox<>();
        btConfirmarRcbto = new javax.swing.JButton();
        btCancelarRcbto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblCliente = new javax.swing.JLabel();
        txtCliente = new javax.swing.JCTextField();
        btCliente = new javax.swing.JButton();
        lblDataHora = new javax.swing.JLabel();
        txtData = new javax.swing.JCTextField();
        jPanel3 = new javax.swing.JPanel();
        scrollPaneVendaItem = new javax.swing.JScrollPane();
        tabelaVendaItem = new javax.swing.JTable();
        btAdicionarItem = new javax.swing.JButton();
        btAlterarItem = new javax.swing.JButton();
        btRemoverItem = new javax.swing.JButton();
        lblTotalVenda = new javax.swing.JLabel();
        txtTotalVenda = new javax.swing.JCFormattedTextField();
        btFinalizar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        consultarCliente.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        consultarCliente.setTitle(bundle.getString("ClienteView.consultar.title")); // NOI18N
        consultarCliente.setMinimumSize(new java.awt.Dimension(726, 400));
        consultarCliente.setModal(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("consultar"))); // NOI18N

        jLabel17.setText(bundle.getString("filtro")); // NOI18N

        cbFiltroCliente.setModel(new javax.swing.DefaultComboBoxModel<String>(bundle.getString("ClienteView.cbFiltro.array").split(",")));
        cbFiltroCliente.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        btConsultarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultarCliente.setText(bundle.getString("consultar")); // NOI18N
        btConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarClienteActionPerformed(evt);
            }
        });

        txtConsultaCliente.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtConsultaCliente.setPlaceholder(bundle.getString("consulta.placeholder")); // NOI18N
        txtConsultaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultaClienteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtConsultaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbFiltroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsultaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultarCliente))
                .addGap(10, 10, 10))
        );

        scrollPaneCliente.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaClienteMouseReleased(evt);
            }
        });
        tabelaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaClienteKeyReleased(evt);
            }
        });
        scrollPaneCliente.setViewportView(tabelaCliente);

        btSelecionarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btSelecionarCliente.setText(bundle.getString("selecionar")); // NOI18N
        btSelecionarCliente.setEnabled(false);

        btCancelarConsultaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarConsultaCliente.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarConsultaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPaneCliente)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(scrollPaneCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionarCliente)
                    .addComponent(btCancelarConsultaCliente))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarClienteLayout = new javax.swing.GroupLayout(consultarCliente.getContentPane());
        consultarCliente.getContentPane().setLayout(consultarClienteLayout);
        consultarClienteLayout.setHorizontalGroup(
            consultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        consultarClienteLayout.setVerticalGroup(
            consultarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        consultarProduto.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        consultarProduto.setTitle(bundle.getString("ProdutoView.consultar.title")); // NOI18N
        consultarProduto.setMinimumSize(new java.awt.Dimension(726, 400));
        consultarProduto.setModal(true);
        consultarProduto.setSize(new java.awt.Dimension(0, 0));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("consultar"))); // NOI18N

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText(bundle.getString("filtro")); // NOI18N

        cbFiltroProduto.setModel(new javax.swing.DefaultComboBoxModel<String>(bundle.getString("ProdutoView.cbFiltro.array").split(",")));
        cbFiltroProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbFiltroProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroProdutoActionPerformed(evt);
            }
        });

        jPanel4.setLayout(new javax.swing.OverlayLayout(jPanel4));

        txtConsultaProduto.setPlaceholder(bundle.getString("consulta.placeholder")); // NOI18N
        txtConsultaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultaProdutoKeyPressed(evt);
            }
        });
        jPanel4.add(txtConsultaProduto);

        cbTipo.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        jPanel4.add(cbTipo);

        btConsultarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultarProduto.setText(bundle.getString("consultar")); // NOI18N
        btConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btConsultarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cbFiltroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btConsultarProduto)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        scrollPaneProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaProdutoMouseReleased(evt);
            }
        });
        tabelaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaProdutoKeyReleased(evt);
            }
        });
        scrollPaneProduto.setViewportView(tabelaProduto);

        lblQtd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtd.setText(bundle.getString("VendaView.lblQtd.text")); // NOI18N

        spnQtd.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btSelecionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btSelecionarProduto.setText(bundle.getString("selecionar")); // NOI18N
        btSelecionarProduto.setEnabled(false);

        btCancelarConsultaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarConsultaProduto.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btSelecionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btCancelarConsultaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollPaneProduto)
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQtd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(scrollPaneProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtd))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionarProduto)
                    .addComponent(btCancelarConsultaProduto))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarProdutoLayout = new javax.swing.GroupLayout(consultarProduto.getContentPane());
        consultarProduto.getContentPane().setLayout(consultarProdutoLayout);
        consultarProdutoLayout.setHorizontalGroup(
            consultarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        consultarProdutoLayout.setVerticalGroup(
            consultarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        alterarItem.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        alterarItem.setTitle(bundle.getString("alterarItem")); // NOI18N
        alterarItem.setMinimumSize(new java.awt.Dimension(526, 142));
        alterarItem.setModal(true);
        alterarItem.setResizable(false);

        lblProduto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblProduto.setText(bundle.getString("ProdutoView.title")); // NOI18N

        txtProduto.setEditable(false);
        txtProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        lblQtd1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtd1.setText(bundle.getString("VendaView.lblQtd.text")); // NOI18N

        spnQtd1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btConfirmarAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btConfirmarAlterarItem.setText(bundle.getString("confirmar")); // NOI18N

        btCancelarAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarAlterarItem.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout alterarItemLayout = new javax.swing.GroupLayout(alterarItem.getContentPane());
        alterarItem.getContentPane().setLayout(alterarItemLayout);
        alterarItemLayout.setHorizontalGroup(
            alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(alterarItemLayout.createSequentialGroup()
                        .addComponent(lblProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alterarItemLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblQtd1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnQtd1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alterarItemLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btConfirmarAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        alterarItemLayout.setVerticalGroup(
            alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQtd1)
                    .addComponent(spnQtd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelarAlterarItem)
                    .addComponent(btConfirmarAlterarItem))
                .addGap(10, 10, 10))
        );

        recebimento.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        recebimento.setTitle(bundle.getString("VendaView.recebimento.title")); // NOI18N
        recebimento.setMinimumSize(new java.awt.Dimension(526, 115));
        recebimento.setModal(true);
        recebimento.setResizable(false);

        lblTipoMovimentacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTipoMovimentacao.setText(bundle.getString("TipoMovimentacaoView.title")); // NOI18N

        cbTipoMovimentacao.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbTipoMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoMovimentacaoActionPerformed(evt);
            }
        });

        btConfirmarRcbto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btConfirmarRcbto.setText(bundle.getString("confirmar")); // NOI18N
        btConfirmarRcbto.setEnabled(false);

        btCancelarRcbto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarRcbto.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout recebimentoLayout = new javax.swing.GroupLayout(recebimento.getContentPane());
        recebimento.getContentPane().setLayout(recebimentoLayout);
        recebimentoLayout.setHorizontalGroup(
            recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recebimentoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTipoMovimentacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recebimentoLayout.createSequentialGroup()
                        .addGap(0, 149, Short.MAX_VALUE)
                        .addComponent(btConfirmarRcbto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarRcbto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbTipoMovimentacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        recebimentoLayout.setVerticalGroup(
            recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recebimentoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoMovimentacao)
                    .addComponent(cbTipoMovimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btConfirmarRcbto)
                    .addComponent(btCancelarRcbto))
                .addGap(10, 10, 10))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(bundle.getString("VendaView.title")); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("VendaView.jPanel2.border.title"))); // NOI18N

        lblCliente.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCliente.setText(bundle.getString("VendaView.lblCliente.text")); // NOI18N

        txtCliente.setEditable(false);
        txtCliente.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtCliente.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        btCliente.setText("..."); // NOI18N

        lblDataHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDataHora.setText(bundle.getString("VendaView.lblDataHora.text")); // NOI18N

        txtData.setEditable(false);
        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtData.setText("__/__/____ - 00:00:00"); // NOI18N
        txtData.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataHora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btCliente)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente)
                    .addComponent(btCliente)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataHora)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("VendaView.jPanel3.border.title"))); // NOI18N

        scrollPaneVendaItem.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaVendaItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaVendaItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaVendaItemMouseReleased(evt);
            }
        });
        tabelaVendaItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaVendaItemKeyReleased(evt);
            }
        });
        scrollPaneVendaItem.setViewportView(tabelaVendaItem);

        btAdicionarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_add_circle_18pt.png"))); // NOI18N
        btAdicionarItem.setText(bundle.getString("adicionarItem")); // NOI18N
        btAdicionarItem.setEnabled(false);

        btAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_edit_18pt.png"))); // NOI18N
        btAlterarItem.setText(bundle.getString("alterarItem")); // NOI18N
        btAlterarItem.setEnabled(false);

        btRemoverItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_remove_circle_18pt.png"))); // NOI18N
        btRemoverItem.setText(bundle.getString("removerItem")); // NOI18N
        btRemoverItem.setEnabled(false);

        lblTotalVenda.setText(bundle.getString("VendaView.lblTotalVenda.text")); // NOI18N

        txtTotalVenda.setEditable(false);
        txtTotalVenda.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtTotalVenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalVenda.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotalVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTotalVenda.setValue(0.0);
        txtTotalVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalVendaFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneVendaItem)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btAdicionarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(lblTotalVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(scrollPaneVendaItem, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionarItem)
                    .addComponent(btRemoverItem)
                    .addComponent(lblTotalVenda)
                    .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAlterarItem))
                .addGap(10, 10, 10))
        );

        btFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_check_circle_black_18dp.png"))); // NOI18N
        btFinalizar.setText(bundle.getString("VendaView.btFinalizar.text")); // NOI18N
        btFinalizar.setEnabled(false);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btFinalizar))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarClienteActionPerformed
        consultarCliente();
    }//GEN-LAST:event_btConsultarClienteActionPerformed

    private void txtConsultaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaClienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            consultarCliente();
        }
    }//GEN-LAST:event_txtConsultaClienteKeyPressed

    private void tabelaClienteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClienteMouseReleased
        if (tabelaCliente.getSelectedRow() != -1) {
            btSelecionarCliente.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaClienteMouseReleased

    private void tabelaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaClienteKeyReleased
        tabelaClienteMouseReleased(null);
    }//GEN-LAST:event_tabelaClienteKeyReleased

    private void txtTotalVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalVendaFocusGained
        txtTotalVenda.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtTotalVendaFocusGained

    private void cbFiltroProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroProdutoActionPerformed
        txtConsultaProduto.setVisible(cbFiltroProduto.getSelectedIndex() != 1);
        cbTipo.setVisible(cbFiltroProduto.getSelectedIndex() == 1);
        cbTipo.setSelectedIndex(-1);

        try {
            txtConsultaProduto.getDocument().remove(0, txtConsultaProduto.getDocument().getLength());
        } catch (BadLocationException ex) {
            System.err.println("Error: cbFiltroProdutoActionPerformed: " + ex);
        }
    }//GEN-LAST:event_cbFiltroProdutoActionPerformed

    private void btConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarProdutoActionPerformed
        consultarProduto();
    }//GEN-LAST:event_btConsultarProdutoActionPerformed

    private void txtConsultaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            consultarProduto();
        }
    }//GEN-LAST:event_txtConsultaProdutoKeyPressed

    private void tabelaProdutoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutoMouseReleased
        if (tabelaProduto.getSelectedRow() != -1) {
            btSelecionarProduto.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaProdutoMouseReleased

    private void tabelaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaProdutoKeyReleased
        tabelaProdutoMouseReleased(null);
    }//GEN-LAST:event_tabelaProdutoKeyReleased

    private void tabelaVendaItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendaItemMouseReleased
        if (tabelaVendaItem.getSelectedRow() != -1) {
            mVendaItem = ((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).getValue(tabelaVendaItem.getSelectedRow());
            btAlterarItem.setEnabled(true);
            btRemoverItem.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaVendaItemMouseReleased

    private void tabelaVendaItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaVendaItemKeyReleased
        tabelaVendaItemMouseReleased(null);
    }//GEN-LAST:event_tabelaVendaItemKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancelar();
    }//GEN-LAST:event_formWindowClosing

    private void cbTipoMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoMovimentacaoActionPerformed
        if (cbTipoMovimentacao.getSelectedIndex() != -1) {
            if (mRecebimento == null) {
                mRecebimento = new Recebimento();
            }

            mRecebimento.setTipoMovimentacao((TipoMovimentacao) cbTipoMovimentacao.getSelectedItem());
            btConfirmarRcbto.setEnabled(true);
        }
    }//GEN-LAST:event_cbTipoMovimentacaoActionPerformed
    
    private void init() {
        bundle = ResourceBundle.getBundle("res/Bundle"); // NOI18N
        initComponents();
        binder = new AnnotatedBinder(this);
        configEventos();
        setSize(SoftConfig.WINDOW_WIDTH, getHeight());
        setLocationRelativeTo(null);
        carregarTabela(VendaItem.class, new ArrayList(), bundle.getString("VendaView.tabela.vazia"), 
                    scrollPaneVendaItem, tabelaVendaItem, bundle.getString("VendaView.tabela.header"));
        btCliente.requestFocus();
    } // Fim do m√©todo init
    
    private void callConsultaCliente() {
        consultarCliente.setSize(SoftConfig.WINDOW_WIDTH, consultarCliente.getMinimumSize().height);
        consultarCliente.setLocationRelativeTo(null);
        cbFiltroCliente.setSelectedIndex(0);
        txtConsultaCliente.setText(null);
        
        try {
            carregarTabela(Cliente.class, new ClienteDAO().listar(), bundle.getString("ClienteView.tabela.vazia"), 
                    scrollPaneCliente, tabelaCliente, bundle.getString("ClienteView.tabela.header"));
            btSelecionarCliente.setEnabled(false);
            consultarCliente.setVisible(true);
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("ClienteView.erroCarregar"), 
                    bundle.getString("ClienteView.erroCarregarTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo callConsultaCliente
    
    private void consultarCliente() {
        if (!txtConsultaCliente.getText().isEmpty()) {
            try {
                Map<Integer, Runnable> map = new HashMap<>();
                map.put(0, () -> {
                    carregarTabela(Cliente.class, new ClienteDAO().consultarPorLike("nome", txtConsultaCliente.getText()),
                            bundle.getString("ClienteView.tabela.vazia"), scrollPaneCliente, tabelaCliente, 
                            bundle.getString("ClienteView.tabela.header"));
                });
                map.put(1, () -> {
                    carregarTabela(Cliente.class, new ClienteDAO().consultarPorLike("nuCpf", txtConsultaCliente.getText()),
                            bundle.getString("ClienteView.tabela.vazia"), scrollPaneCliente, tabelaCliente, 
                            bundle.getString("ClienteView.tabela.header"));
                });
                map.get(cbFiltroCliente.getSelectedIndex()).run();
            } catch (HibernateException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("erroBusca"));
            }
        } else {
            carregarTabela(Cliente.class, new ClienteDAO().listar(), 
                    bundle.getString("ClienteView.tabela.vazia"), scrollPaneCliente, tabelaCliente, 
                    bundle.getString("ClienteView.tabela.header"));
        }
        
        btSelecionarCliente.setEnabled(false);
    } // Fim do m√©todo consultarCliente
    
    private void selecionarCliente() {
        if (mVenda == null) {
            mVenda = new Venda();
        }
        
        mVenda.setDtVenda(new Date());
        mVenda.setCliente(((ObjectTableModel<Cliente>) tabelaCliente.getModel()).getValue(tabelaCliente.getSelectedRow()));
        Venda venda = new VendaDAO().consultarVendaPorCliente(mVenda.getCliente().getCdCliente());
        List<VendaItem> vendaItens = new ArrayList<>();
        
        if (venda != null) {
            mVenda = venda;
            vendaItens = new VendaItemDAO().consultarPorVenda(venda.getCdVenda());
            txtTotalVenda.setValue(vendaItens.stream().mapToDouble((vi) -> vi.getQtdItem() * vi.getVlItem()).sum());
        } else { // nova venda
            mVenda.setRecebido(Boolean.FALSE);
            mVenda.setUsuario(Menu.loggedUser);
            mVenda.setVlTotalVenda(0.0F);
        }
        
        carregarTabela(VendaItem.class, vendaItens, bundle.getString("VendaView.tabela.vazia"), 
                scrollPaneVendaItem, tabelaVendaItem, bundle.getString("VendaView.tabela.header"));
        atualizarTelaSalvarVenda();
        btAdicionarItem.setEnabled(true);
        btCliente.setEnabled(false);
        btFinalizar.setEnabled(true);
        consultarCliente.dispose();
    } // Fim do m√©todo selecionarCliente
    
    private void callConsultaProduto() {
        consultarProduto.setSize(SoftConfig.WINDOW_WIDTH, consultarProduto.getMinimumSize().height);
        consultarProduto.setLocationRelativeTo(null);
        cbFiltroCliente.setSelectedIndex(0);
        txtConsultaCliente.setText(null);
        cbTipo.setSelectedIndex(-1);
        cbTipo.setVisible(false);
        txtConsultaProduto.setText(null);
        
        try {
            carregarTipos(cbTipo, new TipoProdutoDAO().listar());
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("ProdutoView.erroCarregarTipos"), 
                    bundle.getString("ProdutoView.erroCarregarTiposTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            carregarTabela(Produto.class, new ProdutoDAO().listar(), bundle.getString("ProdutoView.tabela.vazia"), 
                    scrollPaneProduto, tabelaProduto, bundle.getString("ProdutoView.tabela.header"));
            btSelecionarProduto.setEnabled(false);
            spnQtd.setValue(1);
            consultarProduto.setVisible(true);
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("ProdutoView.erroCarregar"), 
                    bundle.getString("ProdutoView.erroCarregarTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo callConsultaProduto
    
    private void consultarProduto() {
        String busca = txtConsultaProduto.getText().trim();

        if ((cbTipo.getSelectedItem() != null && !cbTipo.getSelectedItem().toString().isEmpty()) || 
                (busca != null && !busca.isEmpty())) {
            try {
                Map<Integer, Runnable> map = new HashMap<>();
                map.put(0, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorLike("nome", busca), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.put(1, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorTipo(cbTipo.getSelectedItem().toString()), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.put(2, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorLike("nuProduto", busca), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.get(cbFiltroProduto.getSelectedIndex()).run();
            } catch (HibernateException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("erroBusca"));
            }
        } else {
            carregarTabela(Produto.class, new ProdutoDAO().listar(), bundle.getString("ProdutoView.tabela.vazia"), 
                    scrollPaneProduto, tabelaProduto, bundle.getString("ProdutoView.tabela.header"));
        }
        
        btSelecionarProduto.setEnabled(false);
    } // fim do m√©todo consultarProduto
    
    private void adicionarItem() {
        existeItem = false;
        Produto produto = ((ObjectTableModel<Produto>) tabelaProduto.getModel()).getValue(tabelaProduto.getSelectedRow());
        ObjectTableModel<VendaItem> vendaItemModel = (ObjectTableModel<VendaItem>) tabelaVendaItem.getModel();
        vendaItemModel.forEach((vi) -> {
            if (produto.getCdProduto().equals(vi.getProduto().getCdProduto())) {
                existeItem = true;
                
                if (Integer.parseInt(spnQtd.getValue().toString()) + vi.getQtdItem() <= vi.getProduto().getQtdProduto()) {
                    vi.setVlItem(produto.getVlVenda());
                    vi.setQtdItem(Integer.parseInt(spnQtd.getValue().toString()) + vi.getQtdItem());
                    new VendaItemDAO().salvar(vi);
                    atualizarTelaSalvarVenda();
                    consultarProduto.dispose();
                } else {
                    // tentando vender mais produto do que o dispon√≠vel no estoque
                    JOptionPane.showMessageDialog(((Frame) getParent()), String.format(
                                    bundle.getString("VendaView.qtdIndisponivel2"), 
                                    vi.getQtdItem(), spnQtd.getValue(), 
                                    (vi.getQtdItem() + Integer.parseInt(spnQtd.getValue().toString())), 
                                    vi.getProduto().getQtdProduto()));
                    ((JSpinner.DefaultEditor) spnQtd.getEditor()).getTextField().requestFocus();
                }
            }
        });
        
        if (!existeItem) {
            if (Integer.parseInt(spnQtd.getValue().toString()) <= produto.getQtdProduto()) {
                VendaItem vi = new VendaItem();
                vi.setVenda(mVenda);
                vi.setProduto(produto);
                vi.setVlItem(produto.getVlVenda());
                vi.setQtdItem(Integer.parseInt(spnQtd.getValue().toString()));
                new VendaItemDAO().salvar(vi);
                vendaItemModel.add(vi);
                scrollPaneVendaItem.setViewportView(tabelaVendaItem);
                atualizarTelaSalvarVenda();
                consultarProduto.dispose();
            } else {
                // tentando vender mais produto do que o dispon√≠vel no estoque
                JOptionPane.showMessageDialog(((Frame) getParent()), bundle.getString("VendaView.qtdIndisponivel"));
                ((JSpinner.DefaultEditor) spnQtd.getEditor()).getTextField().requestFocus();
            }
        }
    } // Fim do m√©todo adicionarItem
    
    private void callAlterarItem() {
        alterarItem.setLocationRelativeTo(null);
        txtProduto.setText(mVendaItem.getProduto().getNome());
        spnQtd1.setValue(mVendaItem.getQtdItem());
        alterarItem.setVisible(true);
    } // Fim do m√©todo callAlterarItem
    
    private void alterarItem() {
        if (Integer.parseInt(spnQtd1.getValue().toString()) <= mVendaItem.getProduto().getQtdProduto()) {
            mVendaItem.setQtdItem(Integer.parseInt(spnQtd1.getValue().toString()));
            new VendaItemDAO().salvar(mVendaItem);
            atualizarTelaSalvarVenda();
            alterarItem.dispose();
        } else {
            // tentando vender mais produto do que o dispon√≠vel no estoque
            JOptionPane.showMessageDialog(((Frame) getParent()), bundle.getString("VendaView.qtdIndisponivel"));
            ((JSpinner.DefaultEditor) spnQtd1.getEditor()).getTextField().requestFocus();
        }
    } // Fim do m√©todo alterarItem
    
    private void removerItem() {
        if (JOptionPane.showConfirmDialog((Frame) getParent(),
                bundle.getString("VendaView.confirmarRemover"),
                bundle.getString("removerItem"), 0) == 0) {
            try {
                new VendaItemDAO().excluir(mVendaItem);
                ((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).remove(mVendaItem);
                atualizarTelaSalvarVenda();
                
                if (((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).isEmpty()) {
                    scrollPaneVendaItem.setViewportView(new JLabel(bundle.getString("ProdutoView.tabela.vazia"), javax.swing.SwingConstants.CENTER));
                }
                
                JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("VendaView.removidoSucesso"));
            } catch (HibernateException | HeadlessException e) {
                JOptionPane.showMessageDialog((Frame) getParent(),
                        bundle.getString("VendaView.erroRemover")
                        + "\n<html><b>" + e.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"),
                        bundle.getString("VendaView.erroRemoverTitle"),
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    } // Fim do m√©todo removerItem
    
    private void callRecebimento() {
        recebimento.setLocationRelativeTo(null);
        
        if (mRecebimento == null) {
            btConfirmarRcbto.setEnabled(false);
        }
        
        try {
            carregarTipos(cbTipoMovimentacao, new TipoMovimentacaoDAO().listar());
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("VendaView.erroCarregarTipos"), 
                    bundle.getString("VendaView.erroCarregarTiposTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        recebimento.setVisible(true);
    } // Fim do m√©todo callRecebimento
    
    private void finalizarVenda() {
        try {
            mRecebimento.setVenda(mVenda);
            mRecebimento.setVlRecebimento(mVenda.getVlTotalVenda());
            mRecebimento.setDtRecebimento(new Date());
            new RecebimentoDAO().salvar(mRecebimento);
            mVenda.setRecebido(Boolean.TRUE);
            new VendaDAO().salvar(mVenda);
            ((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).forEach((vi) -> {
                Produto p = vi.getProduto();
                p.setQtdProduto(p.getQtdProduto() - vi.getQtdItem()); // venda = diminuir estoque
                new ProdutoDAO().salvar(p);
            });
            JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("VendaView.finalizadaSucesso"));
            gerarRecibo();
            recebimento.dispose();
            dispose();
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("VendaView.erroFinalizar")
                        + "\n<html><b>" + ex.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"), 
                        bundle.getString("VendaView.erroFinalizarTitle"), 
                        JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo finalizarVenda
    
    private void gerarRecibo() {
        String dirtosave = System.getProperty("user.home") + "\\Documents\\Recibos Adega do Cheiro\\";
        
        try {
            new File(dirtosave).mkdir();
        } catch (Exception ex) {
            System.err.println("Error: gerarRecibo: " + ex);
        }
        
        String pdffiledir = dirtosave + bundle.getString("recibo") + "_" + getTitle() + "_" + 
                        mRecebimento.getCdRecebimento()+ mRecebimento.getVenda().getCdVenda() + ".pdf";
        new PdfDocument()
                .addParagraph(new SimpleDateFormat(bundle.getString("dateTimeFormatString"))
                        .format(mRecebimento.getDtRecebimento()), Element.ALIGN_RIGHT)
                .addParagraph("Adega do Cheiro", Element.ALIGN_CENTER)
                .addParagraph("\n")
                .addParagraph(bundle.getString("ClienteView.title") + ": " + 
                        mRecebimento.getVenda().getCliente())
                .addParagraph(bundle.getString("UsuarioView.title") + ": " + 
                        mRecebimento.getVenda().getUsuario().getCdUsuario() + " - " + 
                        mRecebimento.getVenda().getUsuario().getNome())
                .addParagraph(bundle.getString("TipoMovimentacaoView.title") + ": " + mRecebimento.getTipoMovimentacao())
                .addParagraph("\n")
                .addParagraph(bundle.getString("VendaView.jPanel3.border.title"))
                .addParagraph("\n").addTable(new PdfTable(tabelaVendaItem))
                .addParagraph(lblTotalVenda.getText()+ ": " + 
                        new DecimalFormat("#,##0.00").format(mRecebimento.getVlRecebimento()), Element.ALIGN_RIGHT)
                .save(pdffiledir);
        
        File pdf = new File(pdffiledir);
        
        if (pdf.exists()) {
            try {
                Desktop.getDesktop().open(pdf);
            } catch (IOException ex) {
                System.err.println("Error: gerarRecibo: " + ex);
            }
        }
    } // Fim do m√©todo gerarRecibo
    
    private void atualizarTelaSalvarVenda() throws NumberFormatException {
        mVenda.setVlTotalVenda(Float.parseFloat(String.valueOf(
                ((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).getData()
                        .stream().mapToDouble((vi) -> vi.getQtdItem() * vi.getVlItem()).sum())));
        txtData.setText(new SimpleDateFormat(bundle.getString("dateTimeFormatString")).format(mVenda.getDtVenda()));
        new VendaDAO().salvar(mVenda);
        binder.updateView(mVenda);
        tabelaVendaItem.clearSelection();
        btAlterarItem.setEnabled(false);
        btRemoverItem.setEnabled(false);
    } // Fim do m√©todo updateView
    
    private void configEventos() {
        new MyMouseAdapter(btCliente).setAction(this, KeyEvent.VK_F, InputEvent.CTRL_DOWN_MASK, () -> {
            callConsultaCliente();
        });
        new MyMouseAdapter(btSelecionarCliente).setAction(consultarCliente, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            selecionarCliente();
        });
        new MyMouseAdapter(btCancelarConsultaCliente).setAction(consultarCliente, KeyEvent.VK_ESCAPE, 0, () -> {
            consultarCliente.dispose();
        });
        new MyMouseAdapter(btAdicionarItem).setAction(this, KeyEvent.VK_F6, 0, () -> {
            callConsultaProduto();
        });
        new MyMouseAdapter(btAlterarItem).setAction(this, KeyEvent.VK_F7, 0, () -> {
            callAlterarItem();
        });
        new MyMouseAdapter(btRemoverItem).setAction(this, KeyEvent.VK_F8, 0, () -> {
            removerItem();
        });
        new MyMouseAdapter(btFinalizar).setAction(this, KeyEvent.VK_F9, 0, () -> {
            callRecebimento();
        });
        new MyMouseAdapter(btCancelar).setAction(this, KeyEvent.VK_ESCAPE, 0, () -> {
            cancelar();
        });
        new MyMouseAdapter(btSelecionarProduto).setAction(consultarProduto, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            adicionarItem();
        });
        new MyMouseAdapter(btCancelarConsultaProduto).setAction(consultarProduto, KeyEvent.VK_ESCAPE, 0, () -> {
            consultarProduto.dispose();
        });
        new MyMouseAdapter(btConfirmarAlterarItem).setAction(alterarItem, KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK, () -> {
            alterarItem();
        });
        new MyMouseAdapter(btCancelarAlterarItem).setAction(alterarItem, KeyEvent.VK_ESCAPE, 0, () -> {
            alterarItem.dispose();
        });
        new MyMouseAdapter(btConfirmarRcbto).setAction(recebimento, KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK, () -> {
            finalizarVenda();
        });
        new MyMouseAdapter(btCancelarRcbto).setAction(recebimento, KeyEvent.VK_ESCAPE, 0, () -> {
            recebimento.dispose();
        });
    } // Fim do m√©todo configEvento
    
    private void carregarTipos(JComboBox comboBox, List data) throws HibernateException {
        if (comboBox.getItemCount() == 0) {
            if (data != null && !data.isEmpty()) {
                ObjectComboBoxModel comboBoxModel = new ObjectComboBoxModel<>();
                comboBoxModel.setData(data);
                comboBox.setModel(comboBoxModel);
            }

            comboBox.setRenderer(new PromptComboBoxRenderer(bundle.getString("selecione")));
        }
    } // Fim do m√©todo carregarTipos
    
    protected void carregarTabela(Class<?> clazz, List itens, String nenhumItem, 
            JScrollPane scrollPane, JTable tabela, String cols) {
        if (itens != null && !itens.isEmpty()) {
            scrollPane.setViewportView(tabela);
        } else {
            scrollPane.setViewportView(new JLabel(nenhumItem, javax.swing.SwingConstants.CENTER));
        }
        
        ObjectTableModel<VendaItem> tableModel = new ObjectTableModel<>(new AnnotationResolver(clazz), cols);
        tableModel.setData(itens);
        tabela.setModel(tableModel);
        tabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    } // Fim do m√©todo carregarTabela
    
    private void cancelar() {
        if (JOptionPane.showConfirmDialog((Frame) getParent(),
                bundle.getString("confirmarCancelar"),
                bundle.getString("cancelar"), 0) == 0) {
            if (mVenda != null) {
                ((ObjectTableModel<VendaItem>) tabelaVendaItem.getModel()).forEach((vi) -> {
                    new VendaItemDAO().excluir(vi);
                });
                new VendaDAO().excluir(mVenda);
            }
            dispose();
        }
    } // Fim do m√©todo cancelar

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog alterarItem;
    private javax.swing.JButton btAdicionarItem;
    private javax.swing.JButton btAlterarItem;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelarAlterarItem;
    private javax.swing.JButton btCancelarConsultaCliente;
    private javax.swing.JButton btCancelarConsultaProduto;
    private javax.swing.JButton btCancelarRcbto;
    private javax.swing.JButton btCliente;
    private javax.swing.JButton btConfirmarAlterarItem;
    private javax.swing.JButton btConfirmarRcbto;
    private javax.swing.JButton btConsultarCliente;
    private javax.swing.JButton btConsultarProduto;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btRemoverItem;
    private javax.swing.JButton btSelecionarCliente;
    private javax.swing.JButton btSelecionarProduto;
    private javax.swing.JComboBox<String> cbFiltroCliente;
    private javax.swing.JComboBox<String> cbFiltroProduto;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JComboBox<String> cbTipoMovimentacao;
    private javax.swing.JDialog consultarCliente;
    private javax.swing.JDialog consultarProduto;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDataHora;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JLabel lblQtd1;
    private javax.swing.JLabel lblTipoMovimentacao;
    private javax.swing.JLabel lblTotalVenda;
    private javax.swing.JDialog recebimento;
    private javax.swing.JScrollPane scrollPaneCliente;
    private javax.swing.JScrollPane scrollPaneProduto;
    private javax.swing.JScrollPane scrollPaneVendaItem;
    private javax.swing.JSpinner spnQtd;
    private javax.swing.JSpinner spnQtd1;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTable tabelaProduto;
    private javax.swing.JTable tabelaVendaItem;
    @Bindable(field = "cliente")
    private javax.swing.JCTextField txtCliente;
    private javax.swing.JCTextField txtConsultaCliente;
    private javax.swing.JCTextField txtConsultaProduto;
    private javax.swing.JCTextField txtData;
    private javax.swing.JCTextField txtProduto;
    @Bindable(field = "vlTotalVenda")
    private javax.swing.JCFormattedTextField txtTotalVenda;
    // End of variables declaration//GEN-END:variables
    
} // Fim da classe VendaView
