/*
 * Copyright 2018 Aluno.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package view;

import model.Usuario;
import swing.JImageFrame;
import util.HibernateUtils;
import values.SoftConfig;

import java.awt.Component;
import java.awt.Cursor;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ResourceBundle;

import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;
import swing.event.MyMouseAdapter;

/**
 *
 * @author Aluno
 */
public class Menu extends JImageFrame {

    private static final String DB_HOST = "localhost";
    private static final String DB_PORT = "3306";
    private static final String DB_NAME = "bd_perfumaria";
    private static final String DB_USERNAME = "root";
    private static final String DB_PASSWORD = "";
    private ResourceBundle bundle;
    static Usuario loggedUser;

    /**
     * Creates new form Menu
     */
    protected Menu() {
        init();
    } // Fim do método construtor Menu
    
    private void init() throws HeadlessException {
        bundle = ResourceBundle.getBundle("res/Bundle");
        
        initComponents();
        configEventos();
        
        try {
            new File(SoftConfig.BACKUP_FOLDER_PATH).mkdir();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, bundle.getString("falhaCriarDiretorio"));
        }
        
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                bundle.getString("arquivosSQL") + " (*.sql)", "SQL");
        fc.setFileFilter(filtro);
        fc.setAcceptAllFileFilterUsed(false);
        liberarAcesso();
    } // Fim do método init

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        sobre = new javax.swing.JDialog();
        lblLogo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblDesenvolvidoPor = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        lblIconesPor = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        btFecharSobre = new javax.swing.JButton();
        atalhos = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAtalhos = new javax.swing.JCTextArea();
        btFecharAtalhos = new javax.swing.JButton();
        lblLogo1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuBackup = new javax.swing.JMenu();
        menuFazerBackup = new javax.swing.JMenuItem();
        menuFazerRestauracao = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        menuCadastrar = new javax.swing.JMenu();
        menuTipoUsuario = new javax.swing.JMenuItem();
        menuUsuario = new javax.swing.JMenuItem();
        menuTipoProduto = new javax.swing.JMenuItem();
        menuProduto = new javax.swing.JMenuItem();
        menuCliente = new javax.swing.JMenuItem();
        menuFornecedor = new javax.swing.JMenuItem();
        menuTipoMovimentacao = new javax.swing.JMenuItem();
        menuCompra = new javax.swing.JMenu();
        menuVenda = new javax.swing.JMenu();
        menuRelatorio = new javax.swing.JMenu();
        menuRelatorioCompra = new javax.swing.JMenuItem();
        menuRelatorioVenda = new javax.swing.JMenuItem();
        menuAjuda = new javax.swing.JMenu();
        menuAtalho = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSobre = new javax.swing.JMenuItem();

        sobre.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        sobre.setTitle(bundle.getString("Menu.menuSobre.text")); // NOI18N
        sobre.setMinimumSize(new java.awt.Dimension(359, 440));
        sobre.setModal(true);
        sobre.setResizable(false);

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ac.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adega do Cheiro v1.0"); // NOI18N

        lblDesenvolvidoPor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDesenvolvidoPor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDesenvolvidoPor.setText(bundle.getString("Menu.lblDesenvolvidoPor.text")); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Carlos Felipe Almeida Gonçalo"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("José Antônio Gonçalves"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Yago Felipe dos Santos Brizola"); // NOI18N

        lblIconesPor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIconesPor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconesPor.setText(bundle.getString("Menu.lblIconesPor.text")); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Google Material Design"); // NOI18N

        btFecharSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btFecharSobre.setText(bundle.getString("fechar")); // NOI18N

        javax.swing.GroupLayout sobreLayout = new javax.swing.GroupLayout(sobre.getContentPane());
        sobre.getContentPane().setLayout(sobreLayout);
        sobreLayout.setHorizontalGroup(
            sobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sobreLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(sobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(lblDesenvolvidoPor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator3)
                    .addComponent(lblIconesPor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sobreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator4)
                .addContainerGap())
            .addGroup(sobreLayout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addComponent(btFecharSobre, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        sobreLayout.setVerticalGroup(
            sobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sobreLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblLogo)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblDesenvolvidoPor)
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblIconesPor)
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addGap(10, 10, 10)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btFecharSobre)
                .addGap(10, 10, 10))
        );

        atalhos.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        atalhos.setTitle(bundle.getString("Menu.menuAtalho.text")); // NOI18N
        atalhos.setMinimumSize(new java.awt.Dimension(359, 440));
        atalhos.setModal(true);
        atalhos.setPreferredSize(new java.awt.Dimension(359, 391));
        atalhos.setResizable(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        txtAtalhos.setEditable(false);
        txtAtalhos.setLineWrap(true);
        txtAtalhos.setDragEnabled(true);
        jScrollPane1.setViewportView(txtAtalhos);

        btFecharAtalhos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btFecharAtalhos.setText(bundle.getString("fechar")); // NOI18N

        lblLogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ac.png"))); // NOI18N

        javax.swing.GroupLayout atalhosLayout = new javax.swing.GroupLayout(atalhos.getContentPane());
        atalhos.getContentPane().setLayout(atalhosLayout);
        atalhosLayout.setHorizontalGroup(
            atalhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atalhosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btFecharAtalhos, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(atalhosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(atalhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(lblLogo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        atalhosLayout.setVerticalGroup(
            atalhosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atalhosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblLogo1)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(btFecharAtalhos)
                .addGap(10, 10, 10))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(bundle.getString("Menu.title")); // NOI18N
        setBackground(new java.awt.Color(0, 0, 0));
        setBackgroundImage(new javax.swing.ImageIcon(getClass().getResource("/res/image/adegadocheiro.jpg"))); // NOI18N
        setExtendedState(6);
        setIconImage(new ImageIcon(getClass().getResource("/res/icon/ac.png")).getImage());
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jMenuBar1.setOpaque(false);

        menuArquivo.setText(bundle.getString("Menu.menuArquivo.text")); // NOI18N

        menuBackup.setText(bundle.getString("Menu.menuBackup.text")); // NOI18N

        menuFazerBackup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuFazerBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_save_18pt.png"))); // NOI18N
        menuFazerBackup.setText(bundle.getString("Menu.menuFazerBackup.text")); // NOI18N
        menuFazerBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFazerBackupActionPerformed(evt);
            }
        });
        menuBackup.add(menuFazerBackup);

        menuFazerRestauracao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuFazerRestauracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_settings_backup_restore_18pt.png"))); // NOI18N
        menuFazerRestauracao.setText(bundle.getString("Menu.menuFazerRestauracao.text")); // NOI18N
        menuFazerRestauracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFazerRestauracaoActionPerformed(evt);
            }
        });
        menuBackup.add(menuFazerRestauracao);

        menuArquivo.add(menuBackup);

        menuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        menuSair.setText(bundle.getString("Menu.menuSair.text")); // NOI18N
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSair);

        jMenuBar1.add(menuArquivo);

        menuCadastrar.setText(bundle.getString("Menu.menuCadastrar.text")); // NOI18N

        menuTipoUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        menuTipoUsuario.setText(bundle.getString("TipoUsuarioView.title")); // NOI18N
        menuTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTipoUsuarioActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuTipoUsuario);

        menuUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        menuUsuario.setText(bundle.getString("UsuarioView.title")); // NOI18N
        menuUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUsuarioActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuUsuario);

        menuTipoProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        menuTipoProduto.setText(bundle.getString("TipoProdutoView.title")); // NOI18N
        menuTipoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTipoProdutoActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuTipoProduto);

        menuProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        menuProduto.setText(bundle.getString("ProdutoView.title")); // NOI18N
        menuProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuProdutoActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuProduto);

        menuCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        menuCliente.setText(bundle.getString("ClienteView.title")); // NOI18N
        menuCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuClienteActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuCliente);

        menuFornecedor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        menuFornecedor.setText(bundle.getString("FornecedorView.title")); // NOI18N
        menuFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFornecedorActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuFornecedor);

        menuTipoMovimentacao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.CTRL_MASK));
        menuTipoMovimentacao.setText(bundle.getString("TipoMovimentacaoView.title")); // NOI18N
        menuTipoMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTipoMovimentacaoActionPerformed(evt);
            }
        });
        menuCadastrar.add(menuTipoMovimentacao);

        jMenuBar1.add(menuCadastrar);

        menuCompra.setText(bundle.getString("CompraView.title")); // NOI18N
        menuCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuCompraMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuCompra);

        menuVenda.setText(bundle.getString("VendaView.title")); // NOI18N
        menuVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuVendaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuVenda);

        menuRelatorio.setText(bundle.getString("Menu.menuRelatorio.text")); // NOI18N

        menuRelatorioCompra.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuRelatorioCompra.setText(bundle.getString("Menu.menuRelatorioCompra.text")); // NOI18N
        menuRelatorioCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRelatorioCompraActionPerformed(evt);
            }
        });
        menuRelatorio.add(menuRelatorioCompra);

        menuRelatorioVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_9, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuRelatorioVenda.setText(bundle.getString("Menu.menuRelatorioVenda.text")); // NOI18N
        menuRelatorioVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRelatorioVendaActionPerformed(evt);
            }
        });
        menuRelatorio.add(menuRelatorioVenda);

        jMenuBar1.add(menuRelatorio);

        menuAjuda.setText(bundle.getString("Menu.menuAjuda.text")); // NOI18N

        menuAtalho.setText(bundle.getString("Menu.menuAtalho.text")); // NOI18N
        menuAtalho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAtalhoActionPerformed(evt);
            }
        });
        menuAjuda.add(menuAtalho);
        menuAjuda.add(jSeparator1);

        menuSobre.setText(bundle.getString("Menu.menuSobre.text")); // NOI18N
        menuSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSobreActionPerformed(evt);
            }
        });
        menuAjuda.add(menuSobre);

        jMenuBar1.add(menuAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        loggedUser = null;
        new Login().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        sair();
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuTipoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTipoProdutoActionPerformed
        new TipoProdutoView(this, true).setVisible(true);
    }//GEN-LAST:event_menuTipoProdutoActionPerformed

    private void menuClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuClienteActionPerformed
        new ClienteView(this, true).setVisible(true);
    }//GEN-LAST:event_menuClienteActionPerformed

    private void menuFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFornecedorActionPerformed
        new FornecedorView(this, true).setVisible(true);
    }//GEN-LAST:event_menuFornecedorActionPerformed

    private void menuUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUsuarioActionPerformed
        new UsuarioView(this, true).setVisible(true);
    }//GEN-LAST:event_menuUsuarioActionPerformed

    private void menuProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuProdutoActionPerformed
        new ProdutoView(this, true).setVisible(true);
    }//GEN-LAST:event_menuProdutoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        sair();
    }//GEN-LAST:event_formWindowClosing

    private void menuFazerBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFazerBackupActionPerformed
        salvarBackup();
    }//GEN-LAST:event_menuFazerBackupActionPerformed

    private void menuFazerRestauracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFazerRestauracaoActionPerformed
        restaurarBackup();
    }//GEN-LAST:event_menuFazerRestauracaoActionPerformed

    private void menuTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTipoUsuarioActionPerformed
        new TipoUsuarioView(this, true).setVisible(true);
    }//GEN-LAST:event_menuTipoUsuarioActionPerformed

    private void menuTipoMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTipoMovimentacaoActionPerformed
        new TipoMovimentacaoView(this, true).setVisible(true);
    }//GEN-LAST:event_menuTipoMovimentacaoActionPerformed

    private void menuCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuCompraMouseClicked
        new CompraView(this, true).setVisible(true);
    }//GEN-LAST:event_menuCompraMouseClicked

    private void menuVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuVendaMouseClicked
        new VendaView(this, true).setVisible(true);
    }//GEN-LAST:event_menuVendaMouseClicked

    private void menuRelatorioCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRelatorioCompraActionPerformed
        new RelatorioComprasView(this, true).callEmitirRelatorioCompras();
    }//GEN-LAST:event_menuRelatorioCompraActionPerformed

    private void menuRelatorioVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRelatorioVendaActionPerformed
        new RelatorioVendasView(this, true).callEmitirRelatorioVendas();
    }//GEN-LAST:event_menuRelatorioVendaActionPerformed

    private void menuAtalhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAtalhoActionPerformed
        atalhos.setLocationRelativeTo(null);
        atalhos.setVisible(true);
    }//GEN-LAST:event_menuAtalhoActionPerformed

    private void menuSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSobreActionPerformed
        sobre.setLocationRelativeTo(null);
        sobre.setVisible(true);
    }//GEN-LAST:event_menuSobreActionPerformed

    protected void liberarAcesso() {
        if (loggedUser != null) {
            StringBuilder sbAtalhosMenu = new StringBuilder(bundle.getString("Menu.atalhos"));
            StringBuilder sbAtalhos = new StringBuilder("\n");
            
            if (loggedUser.getTipoUsuario().getCadTipoUsuario()) {
                menuTipoUsuario.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+1      \t").append(menuTipoUsuario.getText());
                sbAtalhos.append(bundle.getString("TipoUsuarioView.atalhos"));
            } else {
                menuTipoUsuario.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadUsuario()) {
                menuUsuario.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+2      \t").append(menuUsuario.getText());
                sbAtalhos.append(bundle.getString("UsuarioView.atalhos"));
            } else {
                menuUsuario.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadTipoProduto()) {
                menuTipoProduto.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+3      \t").append(menuTipoProduto.getText());
                sbAtalhos.append(bundle.getString("TipoProdutoView.atalhos"));
            } else {
                menuTipoProduto.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadProduto()) {
                menuProduto.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+4      \t").append(menuProduto.getText());
                sbAtalhos.append(bundle.getString("ProdutoView.atalhos"));
            } else {
                menuProduto.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadCliente()) {
                menuCliente.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+5      \t").append(menuCliente.getText());
                sbAtalhos.append(bundle.getString("ClienteView.atalhos"));
            } else {
                menuCliente.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadFornecedor()) {
                menuFornecedor.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+6      \t").append(menuFornecedor.getText());
                sbAtalhos.append(bundle.getString("FornecedorView.atalhos"));
            } else {
                menuFornecedor.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getCadTipoMovimentacao()) {
                menuTipoMovimentacao.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+7      \t").append(menuTipoMovimentacao.getText());
                sbAtalhos.append(bundle.getString("TipoMovimentacaoView.atalhos"));
            } else {
                menuTipoMovimentacao.setVisible(false);
            }
            
            menuCadastrar.setVisible(possuiItemVisivel(menuCadastrar));
            
            if (loggedUser.getTipoUsuario().getRealizarCompra()) {
                menuCompra.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+8      \t").append(menuCompra.getText());
                sbAtalhos.append(bundle.getString("CompraView.atalhos"));
            } else {
                menuCompra.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getRealizarVenda()) {
                menuVenda.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+9      \t").append(menuVenda.getText());
                sbAtalhos.append(bundle.getString("VendaView.atalhos"));
            } else {
                menuVenda.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getEmitirRelatorioCompras()) {
                menuRelatorioCompra.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+Shift+8\t").append(bundle.getString("RelatorioComprasView.title"));
                sbAtalhos.append(bundle.getString("RelatorioComprasView.atalhos"));
            } else {
                menuRelatorioCompra.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getEmitirRelatorioVendas()) {
                menuRelatorioVenda.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+Shift+9\t").append(bundle.getString("RelatorioVendasView.title"));
                sbAtalhos.append(bundle.getString("RelatorioVendasView.atalhos"));
            } else {
                menuRelatorioVenda.setVisible(false);
            }
            
            menuRelatorio.setVisible(possuiItemVisivel(menuRelatorio));
            
            if (loggedUser.getTipoUsuario().getFazerBackup()) {
                menuFazerBackup.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+Shift+S\t").append(menuFazerBackup.getText());
            } else {
                menuFazerBackup.setVisible(false);
            }
            
            if (loggedUser.getTipoUsuario().getFazerRestauracao()) {
                menuFazerRestauracao.setVisible(true);
                sbAtalhosMenu.append("\nCtrl+Shift+O\t").append(menuFazerRestauracao.getText());
            } else {
                menuFazerRestauracao.setVisible(false);
            }
            
            menuBackup.setVisible(possuiItemVisivel(menuBackup));
            
            txtAtalhos.append(sbAtalhosMenu.toString());
            txtAtalhos.append(sbAtalhos.toString());
        }
    } // Fim do método liberarAcesso

    private boolean possuiItemVisivel(JMenu menu) {
        for (Component comp : menu.getMenuComponents()) {
            if (comp.isVisible()) {
                return true;
            }
        }
        
        return false;
    } // Fim do método possuiItemVisivel

    private void salvarBackup() {
        fc.setCurrentDirectory(new File(SoftConfig.BACKUP_FOLDER_PATH));
        String date = new SimpleDateFormat("ddMMyyyyHHmmss").format(new Date());
        fc.setSelectedFile(new File(SoftConfig.BACKUP_FOLDER_PATH + "\\backup_" + date + ".sql"));
        
        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            String path = null;
            
            try {
                File f = fc.getSelectedFile();
                path = f.getAbsolutePath();
                path = path.replace('\\', '/');
                path = "\"" + path + "\"";
            } catch (Exception e) {
                System.err.println("Error: salvarBackup: " + e);
            }
            
            Process p;
            
            try {
                Runtime runtime = Runtime.getRuntime();
                
                if (DB_PASSWORD.isEmpty()) {
                    p = runtime.exec("mysqldump.exe -v -v -v --host=" + DB_HOST + " --user=" + DB_USERNAME + " --port=" + DB_PORT + " --protocol=tcp --force --allow-keywords --compress --add-drop-table --default-character-set=binary --hex-blob --databases " + DB_NAME + " --result-file=" + path);
                } else {
                    p = runtime.exec("mysqldump.exe -v -v -v --host=" + DB_HOST + " --user=" + DB_USERNAME + " --password=" + DB_PASSWORD + " --port=" + DB_PORT + " --protocol=tcp --force --allow-keywords --compress --add-drop-table --default-character-set=binary --hex-blob --databases " + DB_NAME + " --result-file=" + path);
                }

                int processComplete = p.waitFor();
                
                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(getParent(), bundle.getString("Menu.backupSucesso"));
                } else {
                    JOptionPane.showMessageDialog(getParent(), bundle.getString("Menu.erroBackup"));
                }
            } catch (HeadlessException | IOException | InterruptedException e) {
                System.err.println("Error: salvarBackup: " + e);
            }
            
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    } // Fim do método salvarBackup

    private void restaurarBackup() {
        fc.setCurrentDirectory(new File(SoftConfig.BACKUP_FOLDER_PATH));
        
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            String path = "";
            
            HibernateUtils.getSessionFactory().close();
            
            try {
                File f = fc.getSelectedFile();
                path = f.getAbsolutePath();
                path = path.replace('\\', '/');
            } catch (Exception e) {
                System.err.println("Error: restaurarBackup: " + e);
            }

            String[] restoreCmd;
            
            if (DB_PASSWORD.isEmpty()) {
                restoreCmd = new String[]{"mysql.exe ", "--user=" + DB_USERNAME, "-e", "source " + path};
            } else {
                restoreCmd = new String[]{"mysql.exe ", "--user=" + DB_USERNAME, "--password=" + DB_PASSWORD, "-e", "source " + path};
            }
            
            Process runtimProcess;
            
            try {
                runtimProcess = Runtime.getRuntime().exec(restoreCmd);
                int processComplete = runtimProcess.waitFor();

                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(getParent(), bundle.getString("Menu.restauradoSucesso"));
                } else {
                    JOptionPane.showMessageDialog(getParent(), bundle.getString("Menu.erroRestaurar"));
                }
            } catch (HeadlessException | IOException | InterruptedException e) {
                System.err.println("Error: restaurarBackup: " + e);
            }
            
            HibernateUtils.createSessionFactory();
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    } // Fim do método restaurarBackup
    
    private void configEventos() {
        setAtalhoEventoMenu(menuCompra, java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.CTRL_MASK);
        setAtalhoEventoMenu(menuVenda, java.awt.event.KeyEvent.VK_9, java.awt.event.InputEvent.CTRL_MASK);
        new MyMouseAdapter(btFecharSobre).setAction(sobre, KeyEvent.VK_ESCAPE, 0, () -> {
            sobre.dispose();
        });
        new MyMouseAdapter(btFecharAtalhos).setAction(atalhos, KeyEvent.VK_ESCAPE, 0, () -> {
            atalhos.dispose();
        });
    } // Fim do método configEventos
    
    private void setAtalhoEventoMenu(JMenu menu, int keyCode, int modifiers) {
        InputMap inputMap = this.getRootPane().getInputMap(JButton.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(keyCode, modifiers), menu.getText());
        this.getRootPane().setInputMap(JButton.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put(menu.getText(), new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int lgth = menu.getMouseListeners().length;
                
                if (lgth > 0) {
                    ((java.awt.event.MouseAdapter) menu.getMouseListeners()[lgth-1]).mouseClicked(null);
                }
            }
        });
    } // Fim do método setAtalhoEventoMenu
    
    private void sair() {
        if (JOptionPane.showConfirmDialog((Frame) getParent(), 
                bundle.getString("Menu.confirmarSair"), 
                bundle.getString("Menu.menuSair.text"), 0) == 0) {
            dispose();
        }
    } // Fim do método sair

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog atalhos;
    private javax.swing.JButton btFecharAtalhos;
    private javax.swing.JButton btFecharSobre;
    private javax.swing.JFileChooser fc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblDesenvolvidoPor;
    private javax.swing.JLabel lblIconesPor;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogo1;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuItem menuAtalho;
    private javax.swing.JMenu menuBackup;
    private javax.swing.JMenu menuCadastrar;
    private javax.swing.JMenuItem menuCliente;
    private javax.swing.JMenu menuCompra;
    private javax.swing.JMenuItem menuFazerBackup;
    private javax.swing.JMenuItem menuFazerRestauracao;
    private javax.swing.JMenuItem menuFornecedor;
    private javax.swing.JMenuItem menuProduto;
    private javax.swing.JMenu menuRelatorio;
    private javax.swing.JMenuItem menuRelatorioCompra;
    private javax.swing.JMenuItem menuRelatorioVenda;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSobre;
    private javax.swing.JMenuItem menuTipoMovimentacao;
    private javax.swing.JMenuItem menuTipoProduto;
    private javax.swing.JMenuItem menuTipoUsuario;
    private javax.swing.JMenuItem menuUsuario;
    private javax.swing.JMenu menuVenda;
    private javax.swing.JDialog sobre;
    private javax.swing.JCTextArea txtAtalhos;
    // End of variables declaration//GEN-END:variables

} // Fim da classe Menu
