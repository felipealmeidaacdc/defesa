/*
 * Copyright 2018 Aluno.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package view;

import com.itextpdf.text.Element;
import dao.CompraItemDAO;
import model.CompraItem;
import swing.event.MyMouseAdapter;
import pdf.PdfDocument;
import pdf.PdfTable;
import util.TextUtils;

import com.towel.swing.table.ObjectTableModel;

import java.awt.Cursor;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Aluno
 */
public class RelatorioComprasView extends javax.swing.JDialog {

    private ResourceBundle bundle;
    
    /** Creates new form RelatorioComprasView
     * @param owner
     * @param modal */
    public RelatorioComprasView(java.awt.Frame owner, boolean modal) {
        super(owner, modal);
        init();
    } // Fim do método construtor
    
    private void init() {
        bundle = ResourceBundle.getBundle("res/Bundle") ;
        initComponents();
        configEventos();
    } // Fim do método init
    
    public void callEmitirRelatorioCompras() {
        emitirRelatorioCompras.setLocationRelativeTo(null);
        emitirRelatorioCompras.setVisible(true);
    } // Fim do método setIssueDialogVisible

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emitirRelatorioCompras = new javax.swing.JDialog();
        txt = new javax.swing.JTextPane();
        lblDtIni = new javax.swing.JLabel();
        dtIni = new com.toedter.calendar.JDateChooser();
        lblDtFim = new javax.swing.JLabel();
        dtFim = new com.toedter.calendar.JDateChooser();
        btEmitir = new javax.swing.JButton();
        btCancelarEmitir = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btImprimir = new javax.swing.JButton();

        emitirRelatorioCompras.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        emitirRelatorioCompras.setTitle(bundle.getString("emitirRelatorioCompras.title")); // NOI18N
        emitirRelatorioCompras.setMinimumSize(new java.awt.Dimension(412, 160));
        emitirRelatorioCompras.setModal(true);
        emitirRelatorioCompras.setResizable(false);
        emitirRelatorioCompras.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                emitirRelatorioComprasWindowClosed(evt);
            }
        });

        txt.setEditable(false);
        txt.setText(bundle.getString("RelatorioComprasView.textoEmitir")); // NOI18N
        txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt.setOpaque(false);

        lblDtIni.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDtIni.setText(bundle.getString("dtIni")); // NOI18N

        try {
            dtIni.setDate(new SimpleDateFormat("ddMMyyyy").parse("01012000"));
        } catch (ParseException ex) {
            System.err.println("Error: " + ex);
        }

        lblDtFim.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDtFim.setText(bundle.getString("dtFim")); // NOI18N

        dtFim.setDate(new Date());

        btEmitir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btEmitir.setText(bundle.getString("emitir")); // NOI18N

        btCancelarEmitir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarEmitir.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout emitirRelatorioComprasLayout = new javax.swing.GroupLayout(emitirRelatorioCompras.getContentPane());
        emitirRelatorioCompras.getContentPane().setLayout(emitirRelatorioComprasLayout);
        emitirRelatorioComprasLayout.setHorizontalGroup(
            emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emitirRelatorioComprasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btEmitir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btCancelarEmitir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(emitirRelatorioComprasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emitirRelatorioComprasLayout.createSequentialGroup()
                        .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(emitirRelatorioComprasLayout.createSequentialGroup()
                        .addComponent(lblDtIni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 33, Short.MAX_VALUE)
                        .addComponent(lblDtFim, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))))
        );
        emitirRelatorioComprasLayout.setVerticalGroup(
            emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emitirRelatorioComprasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dtFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dtIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDtIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(emitirRelatorioComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEmitir)
                    .addComponent(btCancelarEmitir))
                .addGap(10, 10, 10))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(bundle.getString("RelatorioComprasView.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(726, 535));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ac.png"))); // NOI18N

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblNome.setText("Adega do Cheiro"); // NOI18N

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblTitle.setText(bundle.getString("RelatorioComprasView.title")); // NOI18N

        lblData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblData.setText("########"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText(bundle.getString("cancelar")); // NOI18N

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_save_18pt.png"))); // NOI18N
        btSalvar.setText(bundle.getString("salvar")); // NOI18N

        btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_print_18pt.png"))); // NOI18N
        btImprimir.setText(bundle.getString("imprimir")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNome)
                    .addComponent(lblTitle)
                    .addComponent(lblData))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLogo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblData)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btSalvar)
                    .addComponent(btImprimir))
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void emitirRelatorioComprasWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_emitirRelatorioComprasWindowClosed
        dispose();
    }//GEN-LAST:event_emitirRelatorioComprasWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancelar();
    }//GEN-LAST:event_formWindowClosing

    private void emitirRelatorio() {
        new Thread(() -> {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            Date ini = dtIni.getDate();
            Date fim = dtFim.getDate();
            
            if (ini == null) {
                try {
                    ini = new SimpleDateFormat("ddMMyyyy").parse("01012000");
                } catch (ParseException ex) {
                    System.err.println("Error: emitirRelatorio: " + ex);
                }
            }
            
            if (fim == null) {
                fim = new Date();
            }
            
            ObjectTableModel<CompraItem> tableModel = new ObjectTableModel(CompraItem.class, bundle.getString("RelatorioComprasView.tabela.header"));
            tableModel.setData(new CompraItemDAO().consultarPorPeriodo(ini, fim));
            jTable1.setModel(tableModel);
            
            if (tableModel.getData().isEmpty()) {
                jScrollPane1.setViewportView(new JLabel(bundle.getString("RelatorioComprasView.tabela.vazia"), javax.swing.SwingConstants.CENTER));
                btImprimir.setEnabled(false);
                btSalvar.setEnabled(false);
            }
            
            lblData.setText(new SimpleDateFormat("dd/MM/yyyy - HH:mm").format(new Date()));
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }).start();
    } // Fim do método emitirRelatorio
    
    private void configEventos() {
        new MyMouseAdapter(btImprimir).setAction(this, KeyEvent.VK_P, InputEvent.CTRL_DOWN_MASK, () -> {
            imprimir();
        });
        new MyMouseAdapter(btSalvar).setAction(this, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            salvar();
        });
        new MyMouseAdapter(btCancelar).setAction(this, KeyEvent.VK_ESCAPE, 0, () -> {
            cancelar();
        });
        new MyMouseAdapter(btEmitir).setAction(emitirRelatorioCompras, KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK, () -> {
            emitirRelatorio();
            emitirRelatorioCompras.setVisible(false);
            setVisible(true);
        });
        new MyMouseAdapter(btCancelarEmitir).setAction(emitirRelatorioCompras, KeyEvent.VK_ESCAPE, 0, () -> {
            emitirRelatorioCompras.dispose();
        });
    } // Fim do método configEventos

    private void imprimir() {
        new Thread(() -> {
            gerarDocumento().print(TextUtils.removerAcentos(getTitle().replace(" ", "_")) + "_" + System.currentTimeMillis());
        }).start();
    } // Fim do método imprimir

    private void salvar() {
        new Thread(() -> {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                    bundle.getString("arquivoPDF") + " (*.pdf)", "PDF");
            chooser.setFileFilter(filtro);
            chooser.setAcceptAllFileFilterUsed(false);
            chooser.setSelectedFile(new File(System.getProperty("user.home") + "\\Documents\\" + TextUtils.removerAcentos(getTitle().replace(" ", "_")) + "_" + System.currentTimeMillis() + ".pdf"));
            
            if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                String nome = chooser.getSelectedFile().getPath();
                nome = (".pdf".equalsIgnoreCase(nome.substring(nome.length() - 4, nome.length()))) ? nome : (nome + ".pdf");
                
                if ((new File(nome)).exists() && JOptionPane.showConfirmDialog(this, 
                        bundle.getString("arquivoExiste"), 
                        bundle.getString("arquivoExiste.title"), 
                        JOptionPane.YES_NO_OPTION) != 0) {
                    return; //cancela e não salva
                }
                
                gerarDocumento().save(nome);
            }
        }).start();
    } // Fim do método salvar
    
    private PdfDocument gerarDocumento() {
        return new PdfDocument()
                .addParagraph(lblData.getText(), Element.ALIGN_RIGHT)
                .addParagraph("Adega do Cheiro")
                .addParagraph(getTitle())
                .addParagraph("\n")
                .addTable(new PdfTable(jTable1));
    } // Fim do método gerarDocumento
    
    protected void cancelar() throws HeadlessException {
        if (JOptionPane.showConfirmDialog((Frame) getParent(),
                bundle.getString("confirmarCancelar"),
                bundle.getString("cancelar"), 0) == 0) {
            dispose();
        }
    } // Fim do método cancelar

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelarEmitir;
    private javax.swing.JButton btEmitir;
    private javax.swing.JButton btImprimir;
    private javax.swing.JButton btSalvar;
    private com.toedter.calendar.JDateChooser dtFim;
    private com.toedter.calendar.JDateChooser dtIni;
    private javax.swing.JDialog emitirRelatorioCompras;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDtFim;
    private javax.swing.JLabel lblDtIni;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextPane txt;
    // End of variables declaration//GEN-END:variables

} // Fim da classe RelatorioComprasView
