/*
 * Copyright 2018 Aluno.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package view;

import model.TipoUsuario;
import model.Usuario;
import dao.TipoUsuarioDAO;
import dao.UsuarioDAO;
import swing.PromptComboBoxRenderer;
import swing.event.MyMouseAdapter;
import util.SwingUtils;
import util.TextUtils;
import values.SoftConfig;

import com.towel.bind.annotation.Bindable;
import com.towel.bind.annotation.Form;
import com.towel.swing.combo.ObjectComboBoxModel;
import com.towel.swing.table.ObjectTableModel;

import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.security.*;
import java.util.HashMap;
import java.util.Map;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;

import org.hibernate.HibernateException;

/**
 *
 * @author Aluno
 */
@Form(Usuario.class)
public class UsuarioView extends BaseView {

    /**
     * Creates new form UsuarioView
     * @param parent
     * @param modal
     */
    public UsuarioView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        limpar();
    } // fim do método construtor UsuarioView

    @Override
    protected void init() {
        initComponents();
        carregarTipos(cbTipoUsuario);
    } // fim do método init

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultar = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbFiltro = new javax.swing.JComboBox<>();
        btConsultar1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtConsulta = new javax.swing.JCTextField();
        cbTipo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUsuario = new javax.swing.JTable();
        btSelecionar = new javax.swing.JButton();
        btCancelarConsulta = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btIncluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JCTextField();
        SwingUtils.setFieldLength(txtNome, values.Length.Usuario.NOME, SwingUtils.FIXED_LENGTH);
        lblTipo = new javax.swing.JLabel();
        cbTipoUsuario = new javax.swing.JComboBox<>();
        lblLogin = new javax.swing.JLabel();
        txtLogin = new javax.swing.JCTextField();
        SwingUtils.setFieldLength(txtLogin, values.Length.Usuario.LOGIN, SwingUtils.FIXED_LENGTH);
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JCPasswordField();
        SwingUtils.setFieldLength(txtSenha, values.Length.Usuario.SENHA, SwingUtils.FIXED_LENGTH);
        lblSenhaAnterior = new javax.swing.JLabel();
        txtSenhaAnterior = new javax.swing.JCPasswordField();
        SwingUtils.setFieldLength(txtSenhaAnterior, values.Length.Usuario.SENHA, SwingUtils.FIXED_LENGTH);
        btConsultar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();

        consultar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        consultar.setTitle(bundle.getString("UsuarioView.consultar.title")); // NOI18N
        consultar.setMinimumSize(new java.awt.Dimension(726, 400));
        consultar.setModal(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("UsuarioView.jPanel7.border.title"))); // NOI18N

        jLabel17.setText(bundle.getString("filtro")); // NOI18N

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel<String>(bundle.getString("UsuarioView.cbFiltro.array").split(",")));
        cbFiltro.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroActionPerformed(evt);
            }
        });

        btConsultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultar1.setText(bundle.getString("consultar")); // NOI18N
        btConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultar1ActionPerformed(evt);
            }
        });

        jPanel2.setMaximumSize(new java.awt.Dimension(2147483647, 20));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel2.setLayout(new javax.swing.OverlayLayout(jPanel2));

        txtConsulta.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtConsulta.setPlaceholder(bundle.getString("consulta.placeholder")); // NOI18N
        txtConsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultaKeyReleased(evt);
            }
        });
        jPanel2.add(txtConsulta);

        cbTipo.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        jPanel2.add(cbTipo);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btConsultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btConsultar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaUsuarioMouseReleased(evt);
            }
        });
        tabelaUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaUsuarioKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaUsuario);

        btSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btSelecionar.setText(bundle.getString("selecionar")); // NOI18N
        btSelecionar.setEnabled(false);

        btCancelarConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarConsulta.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionar)
                    .addComponent(btCancelarConsulta))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarLayout = new javax.swing.GroupLayout(consultar.getContentPane());
        consultar.getContentPane().setLayout(consultarLayout);
        consultarLayout.setHorizontalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        consultarLayout.setVerticalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(bundle.getString("UsuarioView.title")); // NOI18N
        setResizable(false);

        btIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_add_18pt.png"))); // NOI18N
        btIncluir.setText(bundle.getString("incluir")); // NOI18N

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_update_18pt.png"))); // NOI18N
        btAlterar.setText(bundle.getString("alterar")); // NOI18N
        btAlterar.setEnabled(false);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText(bundle.getString("cancelar")); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("UsuarioView.jPanel3.border.title"))); // NOI18N

        lblNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNome.setText(bundle.getString("UsuarioView.lblNome.text")); // NOI18N

        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
        });

        lblTipo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTipo.setText(bundle.getString("UsuarioView.lblTipo.text")); // NOI18N

        cbTipoUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbTipoUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbTipoUsuarioFocusGained(evt);
            }
        });

        lblLogin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLogin.setText(bundle.getString("UsuarioView.lblLogin.text")); // NOI18N

        txtLogin.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLoginFocusGained(evt);
            }
        });

        lblSenha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSenha.setText(bundle.getString("UsuarioView.lblSenha.text")); // NOI18N

        txtSenha.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtSenha.setName("hide"); // NOI18N
        txtSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaFocusGained(evt);
            }
        });

        lblSenhaAnterior.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSenhaAnterior.setText(bundle.getString("UsuarioView.lblSenhaAnterior.text")); // NOI18N

        txtSenhaAnterior.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtSenhaAnterior.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaAnteriorFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSenhaAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSenhaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogin)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipo)
                    .addComponent(cbTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenhaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSenhaAnterior)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        btConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultar.setText(bundle.getString("consultar")); // NOI18N

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_fiber_new_18pt.png"))); // NOI18N
        btNovo.setText(bundle.getString("novo")); // NOI18N

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_delete_forever_18pt.png"))); // NOI18N
        btExcluir.setText(bundle.getString("excluir")); // NOI18N
        btExcluir.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btCancelar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btNovo)
                        .addComponent(btConsultar)
                        .addComponent(btIncluir)
                        .addComponent(btAlterar)
                        .addComponent(btExcluir)))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtNomeFocusGained

    private void tabelaUsuarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUsuarioMouseReleased
        if (tabelaUsuario.getSelectedRow() != -1) {
            btSelecionar.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaUsuarioMouseReleased

    private void txtLoginFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLoginFocusGained
        txtLogin.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtLoginFocusGained

    private void cbTipoUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbTipoUsuarioFocusGained
        cbTipoUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_cbTipoUsuarioFocusGained

    private void txtSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFocusGained
        txtSenha.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtSenhaFocusGained

    private void txtSenhaAnteriorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaAnteriorFocusGained
        txtSenhaAnterior.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtSenhaAnteriorFocusGained

    private void btConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultar1ActionPerformed
        consultar();
    }//GEN-LAST:event_btConsultar1ActionPerformed

    private void tabelaUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaUsuarioKeyReleased
        if (tabelaUsuario.getSelectedRow() != -1) {
            btSelecionar.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaUsuarioKeyReleased

    private void txtConsultaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            consultar();
        }
    }//GEN-LAST:event_txtConsultaKeyReleased

    private void cbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroActionPerformed
        txtConsulta.setVisible(cbFiltro.getSelectedIndex() != 1);
        cbTipo.setVisible(cbFiltro.getSelectedIndex() == 1);
        cbTipo.setSelectedIndex(-1);
        
        try {
            txtConsulta.getDocument().remove(0, txtConsulta.getDocument().getLength());
        } catch (BadLocationException ex) {
            System.err.println("Error: cbFiltroActionPerformed: " + ex);
        }
    }//GEN-LAST:event_cbFiltroActionPerformed
    
    @Override
    protected void callConsulta() throws HeadlessException {
        consultar.setSize(SoftConfig.WINDOW_WIDTH, consultar.getHeight());
        consultar.setLocationRelativeTo(null);
        cbFiltro.setSelectedIndex(0);
        cbTipo.setSelectedIndex(-1);
        cbTipo.setVisible(false);
        txtConsulta.setText(null);
        carregarTipos(cbTipo);
        
        try {
            carregarTabela(Usuario.class, new UsuarioDAO().listar(), bundle.getString("UsuarioView.tabela.vazia"), 
                    jScrollPane1, tabelaUsuario, bundle.getString("UsuarioView.tabela.header"));
            btSelecionar.setEnabled(false);
            consultar.setVisible(true);
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("UsuarioView.erroCarregar"), 
                    bundle.getString("UsuarioView.erroCarregarTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do método callConsulta
    
    @Override
    protected void consultar() {
        String busca = txtConsulta.getText().trim();

        if ((cbTipo.getSelectedItem() != null && !cbTipo.getSelectedItem().toString().isEmpty()) || 
                (busca != null && !busca.isEmpty())) {
            try {
                Map<Integer, Runnable> map = new HashMap<>();
                map.put(0, () -> {
                    carregarTabela(Usuario.class, 
                            new UsuarioDAO().consultarPorLike("nome", busca), 
                            bundle.getString("UsuarioView.tabela.vazia"), 
                            jScrollPane1, tabelaUsuario, 
                            bundle.getString("UsuarioView.tabela.header"));
                });
                map.put(1, () -> {
                    carregarTabela(Usuario.class, 
                            new UsuarioDAO().consultarPorTipo(cbTipo.getSelectedItem().toString()), 
                            bundle.getString("UsuarioView.tabela.vazia"), 
                            jScrollPane1, tabelaUsuario, 
                            bundle.getString("UsuarioView.tabela.header"));
                });
                map.put(2, () -> {
                    carregarTabela(Usuario.class, 
                            new UsuarioDAO().consultarPorLike("login", busca), 
                            bundle.getString("UsuarioView.tabela.vazia"), 
                            jScrollPane1, tabelaUsuario, 
                            bundle.getString("UsuarioView.tabela.header"));
                });
                map.get(cbFiltro.getSelectedIndex()).run();
            } catch (HibernateException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("erroBusca"));
            }
        } else {
            carregarTabela(Usuario.class, 
                    new UsuarioDAO().listar(), 
                    bundle.getString("UsuarioView.tabela.vazia"), 
                    jScrollPane1, tabelaUsuario, 
                    bundle.getString("UsuarioView.tabela.header"));
        }
        
        btSelecionar.setEnabled(false);
    } // fim do método consultar
    
    @Override
    protected void novo() throws HeadlessException {
        if (!txtNome.getText().trim().isEmpty() || 
                cbTipoUsuario.getSelectedIndex() != -1 || 
                !txtLogin.getText().trim().isEmpty() || 
                txtSenha.getPassword().length > 0 || 
                txtSenhaAnterior.getPassword().length > 0) {
            if (JOptionPane.showConfirmDialog((Frame) getParent(), 
                    bundle.getString("UsuarioView.confirmarNovo"), 
                    bundle.getString("novo"), 0) == 0) {
                reset(true);
                cbTipoUsuario.setEnabled(true);
            }
        } else {
            limpar();
            txtNome.requestFocus();
        }
    } // Fim do método novo
    
    @Override
    protected void incluir() {
        if (isFormValid()) {
            entity = new Usuario();
            binder.updateModel((Usuario) entity);
            Usuario uLogin = new UsuarioDAO().consultarPorLoginUk(txtLogin.getText().trim());
            
            if (uLogin != null) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.loginExiste"),
                        bundle.getString("atencao"), 
                        JOptionPane.WARNING_MESSAGE);
                txtLogin.requestFocus();
                
                return;
            }
            
            try {
                if (JOptionPane.showConfirmDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.confirmarIncluir"), 
                        bundle.getString("incluir"), 0) == 0) {
                    new UsuarioDAO().salvar((Usuario) entity); // incluir
                    JOptionPane.showMessageDialog((Frame) getParent(), 
                            bundle.getString("UsuarioView.incluidoSucesso"));
                    reset(true);
                }
            } catch (HibernateException | HeadlessException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.erroIncluir")
                        + "\n<html><b>" + e.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"), 
                        bundle.getString("UsuarioView.erroIncluirTitle"), 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    } // fim do método incluir

    @Override
    protected void alterar() {
        if (isFormValid()) {
            Usuario usuario = new Usuario();
            usuario.setCdUsuario(((Usuario) entity).getCdUsuario());
            Usuario uLogin = new UsuarioDAO().consultarPorLoginUk(txtLogin.getText().trim());
            
            if (uLogin != null && !((Usuario) entity).getLogin().equals(txtLogin.getText().trim())) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.loginExiste"),
                        bundle.getString("atencao"), 
                        JOptionPane.WARNING_MESSAGE);
                txtLogin.requestFocus();
                
                return;
            }
            
            /**
            * DEVE SER TESTADO ANTES DE USAR O binder.updateModel(Object),
            * POIS O OBJETO entity AINDA ESTÁ COM OS VALORES ANTIGOS,
            * INCLUSIVE A SENHA PARA SER CONFIRMADA
            */
            if (isOldPasswordCorrect() == false) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.senhaIncorreta"),
                        bundle.getString("atencao"), 
                        JOptionPane.WARNING_MESSAGE);
                txtSenhaAnterior.requestFocus();
                
                return;
            }
            
            binder.updateModel(usuario);
            
            try {
                if (JOptionPane.showConfirmDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.confirmarAlterar"), 
                        bundle.getString("alterar"), 0) == 0) {
                    new UsuarioDAO().salvar(usuario); // alterar
                    JOptionPane.showMessageDialog((Frame) getParent(), 
                            bundle.getString("UsuarioView.alteradoSucesso"));
                    
                    if (Menu.loggedUser.equals(entity)) {
                        Menu.loggedUser = usuario;
                    }
                    
                    reset(true);
                }
            } catch (HibernateException | HeadlessException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.erroAlterar")
                        + "\n<html><b>" + e.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"), 
                        bundle.getString("UsuarioView.erroAlterarTitle"), 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    } // fim do método alterar
    
    @Override
    protected void excluir() {
        if (!new UsuarioDAO().possuiRelacionamento(((Usuario) entity).getCdUsuario())) {
            try {
                if (JOptionPane.showConfirmDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.confirmarExcluir"), 
                        bundle.getString("excluir"), 0) == 0) {
                    new UsuarioDAO().excluir((Usuario) entity); // excluir
                    JOptionPane.showMessageDialog((Frame) getParent(), 
                            bundle.getString("UsuarioView.excluidoSucesso"));
                    reset(true);
                }
            } catch (HibernateException | HeadlessException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.erroExcluir")
                        + "\n<html><b>" + e.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"), 
                        bundle.getString("UsuarioView.erroExcluirTitle"), 
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("UsuarioView.usuarioEmUso"), 
                        bundle.getString("atencao"), 
                        JOptionPane.WARNING_MESSAGE);
        }
    } // fim do método excluir
    
    @Override
    protected boolean validarCampos() {
        boolean valid = true;
        
        if (txtNome.getText().trim().isEmpty()) {
            txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
            valid = false;
        }
        
        if (cbTipoUsuario.getSelectedIndex() == -1) {
            cbTipoUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
            valid = false;
        }
        
        if (txtLogin.getText().trim().isEmpty()) {
            txtLogin.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
            valid = false;
        }
        
        if (txtSenha.getPassword().length == 0) {
            txtSenha.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
            valid = false;
        }
        
        if (btAlterar.isEnabled() && txtSenhaAnterior.getPassword().length == 0) {
            txtSenhaAnterior.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
            valid = false;
        }
        
        return valid;
    } // fim do método validarCampos
    
    @Override
    protected void selecionar() {
        reset(false);
        entity = ((ObjectTableModel<Usuario>) tabelaUsuario.getModel()).getValue(tabelaUsuario.getSelectedRow());
        binder.updateView((Usuario) entity);
        lblSenha.setText(bundle.getString("UsuarioView.lblSenha.text.2"));
        lblSenhaAnterior.setVisible(true);
        txtSenhaAnterior.setVisible(true);
        cbTipoUsuario.setEnabled(true);
        
        if (((Usuario) entity).getCdUsuario() == 1) {
            cbTipoUsuario.setEnabled(false);
            btExcluir.setEnabled(false);
        } else if (Menu.loggedUser.equals(entity)) {
            btExcluir.setEnabled(false);
        }
        
        consultar.dispose();
    } // Fim do método selecionar
    
    @Override
    protected void configEventos() {
        new MyMouseAdapter(btConsultar).setAction(this, KeyEvent.VK_F1, 0, () -> {
            callConsulta();
        });
        new MyMouseAdapter(btNovo).setAction(this, KeyEvent.VK_F2, 0, () -> {
            novo();
        });
        new MyMouseAdapter(btIncluir).setAction(this, KeyEvent.VK_F3, 0, () -> {
            incluir();
        });
        new MyMouseAdapter(btAlterar).setAction(this, KeyEvent.VK_F4, 0, () -> {
            alterar();
        });
        new MyMouseAdapter(btExcluir).setAction(this, KeyEvent.VK_F5, 0, () -> {
            excluir();
        });
        new MyMouseAdapter(btCancelar).setAction(this, KeyEvent.VK_ESCAPE, 0, () -> {
            cancelar();
        });
        
        // atalho da tela de consulta
        new MyMouseAdapter(btCancelarConsulta).setAction(consultar, KeyEvent.VK_ESCAPE, 0, () -> {
            consultar.dispose();
        });
        new MyMouseAdapter(btSelecionar).setAction(consultar, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            selecionar();
        });
    } // fim do método configTeclasAtalho
    
    @Override
    protected final void limpar() {
        super.limpar();
        lblSenha.setText(bundle.getString("UsuarioView.lblSenha.text"));
        
        try {
            txtSenhaAnterior.getDocument().remove(0, txtSenhaAnterior.getDocument().getLength());
        } catch (BadLocationException ex) {
            System.err.println("Error: limpar: " + ex);
        }
        
        lblSenhaAnterior.setVisible(false);
        txtSenhaAnterior.setVisible(false);
    } // fim do método limpar
    
    private boolean isOldPasswordCorrect() {
        String senhaAnterior = "";
        
        try {
            senhaAnterior = TextUtils.md5(String.valueOf(txtSenhaAnterior.getPassword()));
        } catch (NoSuchAlgorithmException ex) {
            System.err.println("Error: alterar: " + ex);
        }
        
        return senhaAnterior.equals(((Usuario) entity).getSenha());
    } // Fim do método isOldPasswordCorrect
    
    private void carregarTipos(JComboBox comboBox) {
        try {
            ObjectComboBoxModel<TipoUsuario> comboBoxModel = new ObjectComboBoxModel<>();
            comboBoxModel.setData(new TipoUsuarioDAO().listar());
            comboBox.setModel(comboBoxModel);
            comboBox.setRenderer(new PromptComboBoxRenderer(bundle.getString("selecione")));
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("UsuarioView.erroCarregarTipos"), 
                    bundle.getString("UsuarioView.erroCarregarTiposTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do método carregarTipos
    
    private void reset(boolean novo) {
        limpar();
        btIncluir.setEnabled(novo);
        btAlterar.setEnabled(!novo);
        btExcluir.setEnabled(!novo);
        txtNome.requestFocus();
    } // Fim do método reset

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelarConsulta;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btConsultar1;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JComboBox<String> cbFiltro;
    private javax.swing.JComboBox<String> cbTipo;
    @Bindable(field = "tipoUsuario")
    private javax.swing.JComboBox<String> cbTipoUsuario;
    private javax.swing.JDialog consultar;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblSenhaAnterior;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTable tabelaUsuario;
    private javax.swing.JCTextField txtConsulta;
    @Bindable(field = "login")
    private javax.swing.JCTextField txtLogin;
    @Bindable(field = "nome")
    private javax.swing.JCTextField txtNome;
    @Bindable(field = "senha")
    private javax.swing.JCPasswordField txtSenha;
    private javax.swing.JCPasswordField txtSenhaAnterior;
    // End of variables declaration//GEN-END:variables

} // fim da classe UsuarioView
