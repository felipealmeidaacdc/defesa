/*
 * Copyright 2018 Aluno.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package view;

import com.itextpdf.text.Element;
import dao.CompraDAO;
import dao.CompraItemDAO;
import dao.FornecedorDAO;
import dao.ProdutoDAO;
import dao.TipoProdutoDAO;
import dao.PagamentoDAO;
import dao.TipoMovimentacaoDAO;
import model.Compra;
import model.CompraItem;
import model.Fornecedor;
import model.Produto;
import model.Pagamento;
import model.TipoMovimentacao;
import pdf.PdfDocument;
import pdf.PdfTable;
import swing.PromptComboBoxRenderer;
import swing.event.MyMouseAdapter;
import values.SoftConfig;

import com.towel.bind.Binder;
import com.towel.bind.annotation.AnnotatedBinder;
import com.towel.bind.annotation.Form;
import com.towel.bind.annotation.Bindable;
import com.towel.el.annotation.AnnotationResolver;
import com.towel.swing.combo.ObjectComboBoxModel;
import com.towel.swing.table.ObjectTableModel;

import java.awt.Desktop;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.text.BadLocationException;

import org.hibernate.HibernateException;

/**
 *
 * @author Aluno
 */
@Form(Compra.class)
public class CompraView extends javax.swing.JDialog {
    
    private boolean existeItem;
    private Compra mCompra;
    private CompraItem mCompraItem;
    private Pagamento mPagamento;
    private ResourceBundle bundle;
    private Binder binder;
    
    /** Creates new form CompraView
     * @param owner
     * @param modal */
    public CompraView(java.awt.Frame owner, boolean modal) {
        super(owner, modal);
        init();
    } // Fim do m√©todo construtor CompraView

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultarFornecedor = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbFiltroFornecedor = new javax.swing.JComboBox<>();
        btConsultarFornecedor = new javax.swing.JButton();
        txtConsultaFornecedor = new javax.swing.JCTextField();
        scrollPaneFornecedor = new javax.swing.JScrollPane();
        tabelaFornecedor = new javax.swing.JTable();
        btSelecionarFornecedor = new javax.swing.JButton();
        btCancelarConsultaFornecedor = new javax.swing.JButton();
        consultarProduto = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        cbFiltroProduto = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        txtConsultaProduto = new javax.swing.JCTextField();
        cbTipo = new javax.swing.JComboBox<>();
        btConsultarProduto = new javax.swing.JButton();
        scrollPaneProduto = new javax.swing.JScrollPane();
        tabelaProduto = new javax.swing.JTable();
        lblQtd = new javax.swing.JLabel();
        spnQtd = new javax.swing.JSpinner();
        btSelecionarProduto = new javax.swing.JButton();
        btCancelarConsultaProduto = new javax.swing.JButton();
        alterarItem = new javax.swing.JDialog();
        lblProduto = new javax.swing.JLabel();
        txtProduto = new javax.swing.JCTextField();
        lblQtd1 = new javax.swing.JLabel();
        spnQtd1 = new javax.swing.JSpinner();
        btConfirmarAlterarItem = new javax.swing.JButton();
        btCancelarAlterarItem = new javax.swing.JButton();
        pagamento = new javax.swing.JDialog();
        lblTipoMovimentacao = new javax.swing.JLabel();
        cbTipoMovimentacao = new javax.swing.JComboBox<>();
        btConfirmarPgto = new javax.swing.JButton();
        btCancelarPgto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblFornecedor = new javax.swing.JLabel();
        txtFornecedor = new javax.swing.JCTextField();
        btFornecedor = new javax.swing.JButton();
        lblDataHora = new javax.swing.JLabel();
        txtData = new javax.swing.JCTextField();
        jPanel3 = new javax.swing.JPanel();
        scrollPaneCompraItem = new javax.swing.JScrollPane();
        tabelaCompraItem = new javax.swing.JTable();
        btAdicionarItem = new javax.swing.JButton();
        btAlterarItem = new javax.swing.JButton();
        btRemoverItem = new javax.swing.JButton();
        lblTotalCompra = new javax.swing.JLabel();
        txtTotalCompra = new javax.swing.JCFormattedTextField();
        btFinalizar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        consultarFornecedor.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        consultarFornecedor.setTitle(bundle.getString("FornecedorView.consultar.title")); // NOI18N
        consultarFornecedor.setMinimumSize(new java.awt.Dimension(726, 400));
        consultarFornecedor.setModal(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("FornecedorView.jPanel7.border.title"))); // NOI18N

        jLabel17.setText(bundle.getString("filtro")); // NOI18N

        cbFiltroFornecedor.setModel(new javax.swing.DefaultComboBoxModel<String>(bundle.getString("FornecedorView.cbFiltro.array").split(",")));
        cbFiltroFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        btConsultarFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultarFornecedor.setText(bundle.getString("consultar")); // NOI18N
        btConsultarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarFornecedorActionPerformed(evt);
            }
        });

        txtConsultaFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtConsultaFornecedor.setPlaceholder(bundle.getString("consulta.placeholder")); // NOI18N
        txtConsultaFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultaFornecedorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltroFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtConsultaFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btConsultarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbFiltroFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsultaFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultarFornecedor))
                .addGap(10, 10, 10))
        );

        scrollPaneFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaFornecedorMouseReleased(evt);
            }
        });
        tabelaFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaFornecedorKeyReleased(evt);
            }
        });
        scrollPaneFornecedor.setViewportView(tabelaFornecedor);

        btSelecionarFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btSelecionarFornecedor.setText(bundle.getString("selecionar")); // NOI18N
        btSelecionarFornecedor.setEnabled(false);

        btCancelarConsultaFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarConsultaFornecedor.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSelecionarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarConsultaFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPaneFornecedor)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(scrollPaneFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionarFornecedor)
                    .addComponent(btCancelarConsultaFornecedor))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarFornecedorLayout = new javax.swing.GroupLayout(consultarFornecedor.getContentPane());
        consultarFornecedor.getContentPane().setLayout(consultarFornecedorLayout);
        consultarFornecedorLayout.setHorizontalGroup(
            consultarFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        consultarFornecedorLayout.setVerticalGroup(
            consultarFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        consultarProduto.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        consultarProduto.setTitle(bundle.getString("ProdutoView.consultar.title")); // NOI18N
        consultarProduto.setMinimumSize(new java.awt.Dimension(726, 400));
        consultarProduto.setModal(true);
        consultarProduto.setSize(new java.awt.Dimension(0, 0));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("ProdutoView.jPanel7.border.title"))); // NOI18N

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText(bundle.getString("filtro")); // NOI18N

        cbFiltroProduto.setModel(new javax.swing.DefaultComboBoxModel<String>(bundle.getString("ProdutoView.cbFiltro.array").split(",")));
        cbFiltroProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbFiltroProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroProdutoActionPerformed(evt);
            }
        });

        jPanel4.setLayout(new javax.swing.OverlayLayout(jPanel4));

        txtConsultaProduto.setPlaceholder(bundle.getString("consulta.placeholder")); // NOI18N
        txtConsultaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultaProdutoKeyPressed(evt);
            }
        });
        jPanel4.add(txtConsultaProduto);

        cbTipo.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        jPanel4.add(cbTipo);

        btConsultarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_search_18pt.png"))); // NOI18N
        btConsultarProduto.setText(bundle.getString("consultar")); // NOI18N
        btConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btConsultarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cbFiltroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btConsultarProduto)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        scrollPaneProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaProdutoMouseReleased(evt);
            }
        });
        tabelaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaProdutoKeyReleased(evt);
            }
        });
        scrollPaneProduto.setViewportView(tabelaProduto);

        lblQtd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtd.setText(bundle.getString("CompraView.lblQtd.text")); // NOI18N

        spnQtd.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btSelecionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btSelecionarProduto.setText(bundle.getString("selecionar")); // NOI18N
        btSelecionarProduto.setEnabled(false);

        btCancelarConsultaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarConsultaProduto.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btSelecionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btCancelarConsultaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollPaneProduto)
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQtd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(scrollPaneProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtd))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionarProduto)
                    .addComponent(btCancelarConsultaProduto))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarProdutoLayout = new javax.swing.GroupLayout(consultarProduto.getContentPane());
        consultarProduto.getContentPane().setLayout(consultarProdutoLayout);
        consultarProdutoLayout.setHorizontalGroup(
            consultarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        consultarProdutoLayout.setVerticalGroup(
            consultarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        alterarItem.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        alterarItem.setTitle(bundle.getString("alterarItem")); // NOI18N
        alterarItem.setMinimumSize(new java.awt.Dimension(526, 142));
        alterarItem.setModal(true);
        alterarItem.setResizable(false);

        lblProduto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblProduto.setText(bundle.getString("ProdutoView.title")); // NOI18N

        txtProduto.setEditable(false);
        txtProduto.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        lblQtd1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtd1.setText(bundle.getString("CompraView.lblQtd.text")); // NOI18N

        spnQtd1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btConfirmarAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btConfirmarAlterarItem.setText(bundle.getString("confirmar")); // NOI18N

        btCancelarAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarAlterarItem.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout alterarItemLayout = new javax.swing.GroupLayout(alterarItem.getContentPane());
        alterarItem.getContentPane().setLayout(alterarItemLayout);
        alterarItemLayout.setHorizontalGroup(
            alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(alterarItemLayout.createSequentialGroup()
                        .addComponent(lblProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alterarItemLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblQtd1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnQtd1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alterarItemLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btConfirmarAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        alterarItemLayout.setVerticalGroup(
            alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alterarItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQtd1)
                    .addComponent(spnQtd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(alterarItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelarAlterarItem)
                    .addComponent(btConfirmarAlterarItem))
                .addGap(10, 10, 10))
        );

        pagamento.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        pagamento.setTitle(bundle.getString("CompraView.pagamento.title")); // NOI18N
        pagamento.setMinimumSize(new java.awt.Dimension(526, 115));
        pagamento.setModal(true);
        pagamento.setResizable(false);

        lblTipoMovimentacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTipoMovimentacao.setText(bundle.getString("TipoMovimentacaoView.title")); // NOI18N

        cbTipoMovimentacao.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        cbTipoMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoMovimentacaoActionPerformed(evt);
            }
        });

        btConfirmarPgto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_done_18pt.png"))); // NOI18N
        btConfirmarPgto.setText(bundle.getString("confirmar")); // NOI18N
        btConfirmarPgto.setEnabled(false);

        btCancelarPgto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelarPgto.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout pagamentoLayout = new javax.swing.GroupLayout(pagamento.getContentPane());
        pagamento.getContentPane().setLayout(pagamentoLayout);
        pagamentoLayout.setHorizontalGroup(
            pagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagamentoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTipoMovimentacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pagamentoLayout.createSequentialGroup()
                        .addGap(0, 149, Short.MAX_VALUE)
                        .addComponent(btConfirmarPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelarPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbTipoMovimentacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        pagamentoLayout.setVerticalGroup(
            pagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagamentoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoMovimentacao)
                    .addComponent(cbTipoMovimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btConfirmarPgto)
                    .addComponent(btCancelarPgto))
                .addGap(10, 10, 10))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(bundle.getString("CompraView.title")); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("CompraView.jPanel2.border.title"))); // NOI18N

        lblFornecedor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFornecedor.setText(bundle.getString("CompraView.lblFornecedor.text")); // NOI18N

        txtFornecedor.setEditable(false);
        txtFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtFornecedor.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        btFornecedor.setText("..."); // NOI18N

        lblDataHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDataHora.setText(bundle.getString("CompraView.lblDataHora.text")); // NOI18N

        txtData.setEditable(false);
        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtData.setText("__/__/____ - 00:00:00"); // NOI18N
        txtData.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataHora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btFornecedor)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornecedor)
                    .addComponent(btFornecedor)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataHora)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")), bundle.getString("CompraView.jPanel3.border.title"))); // NOI18N

        scrollPaneCompraItem.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));

        tabelaCompraItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaCompraItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaCompraItemMouseReleased(evt);
            }
        });
        tabelaCompraItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaCompraItemKeyReleased(evt);
            }
        });
        scrollPaneCompraItem.setViewportView(tabelaCompraItem);

        btAdicionarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_add_circle_18pt.png"))); // NOI18N
        btAdicionarItem.setText(bundle.getString("adicionarItem")); // NOI18N
        btAdicionarItem.setEnabled(false);

        btAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_edit_18pt.png"))); // NOI18N
        btAlterarItem.setText(bundle.getString("alterarItem")); // NOI18N
        btAlterarItem.setEnabled(false);

        btRemoverItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_remove_circle_18pt.png"))); // NOI18N
        btRemoverItem.setText(bundle.getString("removerItem")); // NOI18N
        btRemoverItem.setEnabled(false);

        lblTotalCompra.setText(bundle.getString("CompraView.lblTotalCompra.text")); // NOI18N

        txtTotalCompra.setEditable(false);
        txtTotalCompra.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
        txtTotalCompra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalCompra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotalCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTotalCompra.setValue(0.0);
        txtTotalCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalCompraFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneCompraItem)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btAdicionarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(lblTotalCompra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(scrollPaneCompraItem, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionarItem)
                    .addComponent(btRemoverItem)
                    .addComponent(lblTotalCompra)
                    .addComponent(txtTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAlterarItem))
                .addGap(10, 10, 10))
        );

        btFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_check_circle_black_18dp.png"))); // NOI18N
        btFinalizar.setText(bundle.getString("CompraView.btFinalizar.text")); // NOI18N
        btFinalizar.setEnabled(false);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText(bundle.getString("cancelar")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btFinalizar))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btConsultarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarFornecedorActionPerformed
        consultarFornecedor();
    }//GEN-LAST:event_btConsultarFornecedorActionPerformed

    private void txtConsultaFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaFornecedorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            consultarFornecedor();
        }
    }//GEN-LAST:event_txtConsultaFornecedorKeyPressed

    private void tabelaFornecedorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFornecedorMouseReleased
        if (tabelaFornecedor.getSelectedRow() != -1) {
            btSelecionarFornecedor.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaFornecedorMouseReleased

    private void tabelaFornecedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaFornecedorKeyReleased
        tabelaFornecedorMouseReleased(null);
    }//GEN-LAST:event_tabelaFornecedorKeyReleased

    private void txtTotalCompraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalCompraFocusGained
        txtTotalCompra.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("TextField.shadow")));
    }//GEN-LAST:event_txtTotalCompraFocusGained

    private void cbFiltroProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroProdutoActionPerformed
        txtConsultaProduto.setVisible(cbFiltroProduto.getSelectedIndex() != 1);
        cbTipo.setVisible(cbFiltroProduto.getSelectedIndex() == 1);
        cbTipo.setSelectedIndex(-1);

        try {
            txtConsultaProduto.getDocument().remove(0, txtConsultaProduto.getDocument().getLength());
        } catch (BadLocationException ex) {
            System.err.println("Error: cbFiltroProdutoActionPerformed: " + ex);
        }
    }//GEN-LAST:event_cbFiltroProdutoActionPerformed

    private void btConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarProdutoActionPerformed
        consultarProduto();
    }//GEN-LAST:event_btConsultarProdutoActionPerformed

    private void txtConsultaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            consultarProduto();
        }
    }//GEN-LAST:event_txtConsultaProdutoKeyPressed

    private void tabelaProdutoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutoMouseReleased
        if (tabelaProduto.getSelectedRow() != -1) {
            btSelecionarProduto.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaProdutoMouseReleased

    private void tabelaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaProdutoKeyReleased
        tabelaProdutoMouseReleased(null);
    }//GEN-LAST:event_tabelaProdutoKeyReleased

    private void tabelaCompraItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCompraItemMouseReleased
        if (tabelaCompraItem.getSelectedRow() != -1) {
            mCompraItem = ((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).getValue(tabelaCompraItem.getSelectedRow());
            btAlterarItem.setEnabled(true);
            btRemoverItem.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaCompraItemMouseReleased

    private void tabelaCompraItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaCompraItemKeyReleased
        tabelaCompraItemMouseReleased(null);
    }//GEN-LAST:event_tabelaCompraItemKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancelar();
    }//GEN-LAST:event_formWindowClosing

    private void cbTipoMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoMovimentacaoActionPerformed
        if (cbTipoMovimentacao.getSelectedIndex() != -1) {
            if (mPagamento == null) {
                mPagamento = new Pagamento();
            }

            mPagamento.setTipoMovimentacao((TipoMovimentacao) cbTipoMovimentacao.getSelectedItem());
            btConfirmarPgto.setEnabled(true);
        }
    }//GEN-LAST:event_cbTipoMovimentacaoActionPerformed
    
    private void init() {
        bundle = ResourceBundle.getBundle("res/Bundle"); // NOI18N
        initComponents();
        binder = new AnnotatedBinder(this);
        configEventos();
        setSize(SoftConfig.WINDOW_WIDTH, getHeight());
        setLocationRelativeTo(null);
        carregarTabela(CompraItem.class, new ArrayList(), bundle.getString("CompraView.tabela.vazia"), 
                    scrollPaneCompraItem, tabelaCompraItem, bundle.getString("CompraView.tabela.header"));
        btFornecedor.requestFocus();
    } // Fim do m√©todo init
    
    private void callConsultaFornecedor() throws HeadlessException {
        consultarFornecedor.setSize(SoftConfig.WINDOW_WIDTH, consultarFornecedor.getMinimumSize().height);
        consultarFornecedor.setLocationRelativeTo(null);
        cbFiltroFornecedor.setSelectedIndex(0);
        txtConsultaFornecedor.setText(null);
        
        try {
            carregarTabela(Fornecedor.class, new FornecedorDAO().listar(), bundle.getString("FornecedorView.tabela.vazia"), 
                    scrollPaneFornecedor, tabelaFornecedor, bundle.getString("FornecedorView.tabela.header"));
            btSelecionarFornecedor.setEnabled(false);
            consultarFornecedor.setVisible(true);
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("FornecedorView.erroCarregar"), 
                    bundle.getString("FornecedorView.erroCarregarTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo callConsulta
    
    private void consultarFornecedor() {
        if (!txtConsultaFornecedor.getText().isEmpty()) {
            try {
                Map<Integer, Runnable> map = new HashMap<>();
                map.put(0, () -> {
                    carregarTabela(Fornecedor.class, new FornecedorDAO().consultarPorLike("nome", txtConsultaFornecedor.getText()),
                            bundle.getString("FornecedorView.tabela.vazia"), scrollPaneFornecedor, tabelaFornecedor, 
                            bundle.getString("FornecedorView.tabela.header"));
                });
                map.put(1, () -> {
                    carregarTabela(Fornecedor.class, new FornecedorDAO().consultarPorLike("nuCnpj", txtConsultaFornecedor.getText()),
                            bundle.getString("FornecedorView.tabela.vazia"), scrollPaneFornecedor, tabelaFornecedor, 
                            bundle.getString("FornecedorView.tabela.header"));
                });
                map.get(cbFiltroFornecedor.getSelectedIndex()).run();
            } catch (HibernateException e) {
                JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("erroBusca"));
            }
        } else {
            carregarTabela(Fornecedor.class, new FornecedorDAO().listar(), 
                    bundle.getString("FornecedorView.tabela.vazia"), scrollPaneFornecedor, tabelaFornecedor, 
                    bundle.getString("FornecedorView.tabela.header"));
        }
        
        btSelecionarFornecedor.setEnabled(false);
    } // Fim do m√©todo consultarFornecedor
    
    private void selecionarFornecedor() {
        if (mCompra == null) {
            mCompra = new Compra();
        }
        
        mCompra.setDtCompra(new Date());
        mCompra.setFornecedor(((ObjectTableModel<Fornecedor>) tabelaFornecedor.getModel()).getValue(tabelaFornecedor.getSelectedRow()));
        Compra compra = new CompraDAO().consultarCompraPorFornecedor(mCompra.getFornecedor().getCdFornecedor());
        List<CompraItem> compraItens = new ArrayList<>();
        
        if (compra != null) {
            mCompra = compra;
            compraItens = new CompraItemDAO().consultarPorCompra(compra.getCdCompra());
            txtTotalCompra.setValue(compraItens.stream().mapToDouble((ci) -> ci.getQtdItem() * ci.getVlItem()).sum());
        } else { // nova compra
            mCompra.setPago(Boolean.FALSE);
            mCompra.setUsuario(Menu.loggedUser);
            mCompra.setVlTotalCompra(0.0F);
        }
        
        carregarTabela(CompraItem.class, compraItens, bundle.getString("CompraView.tabela.vazia"), 
                scrollPaneCompraItem, tabelaCompraItem, bundle.getString("CompraView.tabela.header"));
        atualizarTelaSalvarCompra();
        btAdicionarItem.setEnabled(true);
        btFornecedor.setEnabled(false);
        btFinalizar.setEnabled(true);
        consultarFornecedor.dispose();
    } // Fim do m√©todo selecionar
    
    private void callConsultaProduto() {
        consultarProduto.setSize(SoftConfig.WINDOW_WIDTH, consultarProduto.getMinimumSize().height);
        consultarProduto.setLocationRelativeTo(null);
        cbFiltroFornecedor.setSelectedIndex(0);
        txtConsultaFornecedor.setText(null);
        cbTipo.setSelectedIndex(-1);
        cbTipo.setVisible(false);
        txtConsultaProduto.setText(null);
        
        try {
            carregarTipos(cbTipo, new TipoProdutoDAO().listar());
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("ProdutoView.erroCarregarTipos"), 
                    bundle.getString("ProdutoView.erroCarregarTiposTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            carregarTabela(Produto.class, new ProdutoDAO().listar(), bundle.getString("ProdutoView.tabela.vazia"), 
                    scrollPaneProduto, tabelaProduto, bundle.getString("ProdutoView.tabela.header"));
            btSelecionarProduto.setEnabled(false);
            spnQtd.setValue(1);
            consultarProduto.setVisible(true);
        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("ProdutoView.erroCarregar"), 
                    bundle.getString("ProdutoView.erroCarregarTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo callConsultaProduto
    
    private void consultarProduto() {
        String busca = txtConsultaProduto.getText().trim();

        if ((cbTipo.getSelectedItem() != null && !cbTipo.getSelectedItem().toString().isEmpty()) || 
                (busca != null && !busca.isEmpty())) {
            try {
                Map<Integer, Runnable> map = new HashMap<>();
                map.put(0, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorLike("nome", busca), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.put(1, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorTipo(cbTipo.getSelectedItem().toString()), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.put(2, () -> {
                    carregarTabela(Produto.class, new ProdutoDAO().consultarPorLike("nuProduto", busca), 
                            bundle.getString("ProdutoView.tabela.vazia"), scrollPaneProduto, tabelaProduto, 
                            bundle.getString("ProdutoView.tabela.header"));
                });
                map.get(cbFiltroProduto.getSelectedIndex()).run();
            } catch (HibernateException e) {
                System.err.println("Error: " + e);
                JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("erroBusca"));
            }
        } else {
            carregarTabela(Produto.class, new ProdutoDAO().listar(), bundle.getString("ProdutoView.tabela.vazia"), 
                    scrollPaneProduto, tabelaProduto, bundle.getString("ProdutoView.tabela.header"));
        }
        
        btSelecionarProduto.setEnabled(false);
    } // fim do m√©todo consultarProduto
    
    private void adicionarItem() {
        existeItem = false;
        Produto produto = ((ObjectTableModel<Produto>) tabelaProduto.getModel()).getValue(tabelaProduto.getSelectedRow());
        ObjectTableModel<CompraItem> compraItemModel = (ObjectTableModel<CompraItem>) tabelaCompraItem.getModel();
        compraItemModel.forEach((ci) -> {
            if (produto.getCdProduto().equals(ci.getProduto().getCdProduto())) {
                existeItem = true;
                ci.setVlItem(produto.getVlCompra());
                ci.setQtdItem(Integer.parseInt(spnQtd.getValue().toString()) + ci.getQtdItem());
                new CompraItemDAO().salvar(ci);
            }
        });
        
        if (!existeItem) {
            CompraItem ci = new CompraItem();
            ci.setCompra(mCompra);
            ci.setProduto(produto);
            ci.setVlItem(produto.getVlCompra());
            ci.setQtdItem(Integer.parseInt(spnQtd.getValue().toString()));
            new CompraItemDAO().salvar(ci);
            compraItemModel.add(ci);
            scrollPaneCompraItem.setViewportView(tabelaCompraItem);
        }
        
        atualizarTelaSalvarCompra();
        consultarProduto.dispose();
    } // Fim do m√©todo adicionarItem
    
    private void callAlterarItem() {
        alterarItem.setLocationRelativeTo(null);
        txtProduto.setText(mCompraItem.getProduto().getNome());
        spnQtd1.setValue(mCompraItem.getQtdItem());
        alterarItem.setVisible(true);
    } // Fim do m√©todo callAlterarItem
    
    private void alterarItem() {
        mCompraItem.setQtdItem(Integer.parseInt(spnQtd1.getValue().toString()));
        new CompraItemDAO().salvar(mCompraItem);
        atualizarTelaSalvarCompra();
        alterarItem.dispose();
    } // Fim do m√©todo alterarItem
    
    private void removerItem() {
        if (JOptionPane.showConfirmDialog((Frame) getParent(),
                bundle.getString("CompraView.confirmarRemover"),
                bundle.getString("removerItem"), 0) == 0) {
            try {
                new CompraItemDAO().excluir(mCompraItem);
                ((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).remove(mCompraItem);
                atualizarTelaSalvarCompra();
                
                if (((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).isEmpty()) {
                    scrollPaneCompraItem.setViewportView(new JLabel(bundle.getString("ProdutoView.tabela.vazia"), javax.swing.SwingConstants.CENTER));
                }
                
                JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("CompraView.removidoSucesso"));
            } catch (HibernateException | HeadlessException e) {
                JOptionPane.showMessageDialog((Frame) getParent(),
                        bundle.getString("CompraView.erroRemover")
                        + "\n<html><b>" + e.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"),
                        bundle.getString("CompraView.erroRemoverTitle"),
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    } // Fim do m√©todo removerItem
    
    private void callPagamento() {
        pagamento.setLocationRelativeTo(null);
        
        if (mPagamento == null) {
            btConfirmarPgto.setEnabled(false);
        }
        
        try {
            carregarTipos(cbTipoMovimentacao, new TipoMovimentacaoDAO().listar());
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog(getParent(), 
                    bundle.getString("CompraView.erroCarregarTipos"), 
                    bundle.getString("CompraView.erroCarregarTiposTitle"), 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        pagamento.setVisible(true);
    } // Fim do m√©todo callPagamento
    
    private void finalizarCompra() {
        try {
            mPagamento.setCompra(mCompra);
            mPagamento.setVlPagamento(mCompra.getVlTotalCompra());
            mPagamento.setDtPagamento(new Date());
            new PagamentoDAO().salvar(mPagamento);
            mCompra.setPago(Boolean.TRUE);
            new CompraDAO().salvar(mCompra);
            ((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).forEach((ci) -> {
                Produto p = ci.getProduto();
                p.setQtdProduto(p.getQtdProduto() + ci.getQtdItem()); // compra = aumentar estoque
                new ProdutoDAO().salvar(p);
            });
            JOptionPane.showMessageDialog((Frame) getParent(), bundle.getString("CompraView.finalizadaSucesso"));
            gerarRecibo();
            pagamento.dispose();
            dispose();
        } catch (HibernateException ex) {
            JOptionPane.showMessageDialog((Frame) getParent(), 
                        bundle.getString("CompraView.erroFinalizar")
                        + "\n<html><b>" + ex.getClass() + "</html></b>\n"
                        + bundle.getString("contateDesenvolvedor"), 
                        bundle.getString("CompraView.erroFinalizarTitle"), 
                        JOptionPane.ERROR_MESSAGE);
        }
    } // Fim do m√©todo finalizarCompra
    
    private void gerarRecibo() {
        String dirtosave = System.getProperty("user.home") + "\\Documents\\Recibos Adega do Cheiro\\";
        
        try {
            new File(dirtosave).mkdir();
        } catch (Exception ex) {
            System.err.println("Error: gerarRecibo: " + ex);
        }
        
        String pdffiledir = dirtosave + bundle.getString("recibo") + "_" + getTitle() + "_" + 
                        mPagamento.getCdPagamento() + mPagamento.getCompra().getCdCompra() + ".pdf";
        new PdfDocument()
                .addParagraph(new SimpleDateFormat(bundle.getString("dateTimeFormatString"))
                        .format(mPagamento.getDtPagamento()), Element.ALIGN_RIGHT)
                .addParagraph("Adega do Cheiro")
                .addParagraph("\n")
                .addParagraph(bundle.getString("FornecedorView.title") + ": " + 
                        mPagamento.getCompra().getFornecedor())
                .addParagraph(bundle.getString("UsuarioView.title") + ": " + 
                        mPagamento.getCompra().getUsuario().getCdUsuario() + " - " + 
                        mPagamento.getCompra().getUsuario().getNome())
                .addParagraph(bundle.getString("TipoMovimentacaoView.title") + ": " + mPagamento.getTipoMovimentacao())
                .addParagraph("\n")
                .addParagraph(bundle.getString("CompraView.jPanel3.border.title"))
                .addParagraph("\n").addTable(new PdfTable(tabelaCompraItem))
                .addParagraph(lblTotalCompra.getText()+ ": " + 
                        new DecimalFormat("#,##0.00").format(mPagamento.getVlPagamento()), Element.ALIGN_RIGHT)
                .save(pdffiledir);
        
        File pdf = new File(pdffiledir);
        
        if (pdf.exists()) {
            try {
                Desktop.getDesktop().open(pdf);
            } catch (IOException ex) {
                System.err.println("Error: gerarRecibo: " + ex);
            }
        }
    } // Fim do m√©todo gerarRecibo
    
    private void atualizarTelaSalvarCompra() throws NumberFormatException {
        mCompra.setVlTotalCompra(Float.parseFloat(String.valueOf(
                ((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).getData()
                        .stream().mapToDouble((ci) -> ci.getQtdItem() * ci.getVlItem()).sum())));
        txtData.setText(new SimpleDateFormat(bundle.getString("dateTimeFormatString")).format(mCompra.getDtCompra()));
        new CompraDAO().salvar(mCompra);
        binder.updateView(mCompra);
        tabelaCompraItem.clearSelection();
        btAlterarItem.setEnabled(false);
        btRemoverItem.setEnabled(false);
    } // Fim do m√©todo updateView
    
    private void configEventos() {
        new MyMouseAdapter(btFornecedor).setAction(this, KeyEvent.VK_F, InputEvent.CTRL_DOWN_MASK, () -> {
            callConsultaFornecedor();
        });
        new MyMouseAdapter(btSelecionarFornecedor).setAction(consultarFornecedor, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            selecionarFornecedor();
        });
        new MyMouseAdapter(btCancelarConsultaFornecedor).setAction(consultarFornecedor, KeyEvent.VK_ESCAPE, 0, () -> {
            consultarFornecedor.dispose();
        });
        new MyMouseAdapter(btAdicionarItem).setAction(this, KeyEvent.VK_F6, 0, () -> {
            callConsultaProduto();
        });
        new MyMouseAdapter(btAlterarItem).setAction(this, KeyEvent.VK_F7, 0, () -> {
            callAlterarItem();
        });
        new MyMouseAdapter(btRemoverItem).setAction(this, KeyEvent.VK_F8, 0, () -> {
            removerItem();
        });
        new MyMouseAdapter(btFinalizar).setAction(this, KeyEvent.VK_F9, 0, () -> {
            callPagamento();
        });
        new MyMouseAdapter(btCancelar).setAction(this, KeyEvent.VK_ESCAPE, 0, () -> {
            cancelar();
        });
        new MyMouseAdapter(btSelecionarProduto).setAction(consultarProduto, KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK, () -> {
            adicionarItem();
        });
        new MyMouseAdapter(btCancelarConsultaProduto).setAction(consultarProduto, KeyEvent.VK_ESCAPE, 0, () -> {
            consultarProduto.dispose();
        });
        new MyMouseAdapter(btConfirmarAlterarItem).setAction(alterarItem, KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK, () -> {
            alterarItem();
        });
        new MyMouseAdapter(btCancelarAlterarItem).setAction(alterarItem, KeyEvent.VK_ESCAPE, 0, () -> {
            alterarItem.dispose();
        });
        new MyMouseAdapter(btConfirmarPgto).setAction(pagamento, KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK, () -> {
            finalizarCompra();
        });
        new MyMouseAdapter(btCancelarPgto).setAction(pagamento, KeyEvent.VK_ESCAPE, 0, () -> {
            pagamento.dispose();
        });
    } // Fim do m√©todo configEvento
    
    private void carregarTipos(JComboBox comboBox, List data) throws HibernateException {
        if (comboBox.getItemCount() == 0) {
            if (data != null && !data.isEmpty()) {
                ObjectComboBoxModel comboBoxModel = new ObjectComboBoxModel<>();
                comboBoxModel.setData(data);
                comboBox.setModel(comboBoxModel);
            }

            comboBox.setRenderer(new PromptComboBoxRenderer(bundle.getString("selecione")));
        }
    } // Fim do m√©todo carregarTipos
    
    protected void carregarTabela(Class<?> clazz, List itens, String nenhumItem, 
            JScrollPane scrollPane, JTable tabela, String cols) {
        if (itens != null && !itens.isEmpty()) {
            scrollPane.setViewportView(tabela);
        } else {
            scrollPane.setViewportView(new JLabel(nenhumItem, javax.swing.SwingConstants.CENTER));
        }
        
        ObjectTableModel<CompraItem> tableModel = new ObjectTableModel<>(new AnnotationResolver(clazz), cols);
        tableModel.setData(itens);
        tabela.setModel(tableModel);
        tabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    } // Fim do m√©todo carregarTabela
    
    private void cancelar() {
        if (JOptionPane.showConfirmDialog((Frame) getParent(),
                bundle.getString("confirmarCancelar"),
                bundle.getString("cancelar"), 0) == 0) {
            if (mCompra != null) {
                ((ObjectTableModel<CompraItem>) tabelaCompraItem.getModel()).forEach((ci) -> {
                    new CompraItemDAO().excluir(ci);
                });
                new CompraDAO().excluir(mCompra);
            }
            dispose();
        }
    } // Fim do m√©todo cancelar

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog alterarItem;
    private javax.swing.JButton btAdicionarItem;
    private javax.swing.JButton btAlterarItem;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelarAlterarItem;
    private javax.swing.JButton btCancelarConsultaFornecedor;
    private javax.swing.JButton btCancelarConsultaProduto;
    private javax.swing.JButton btCancelarPgto;
    private javax.swing.JButton btConfirmarAlterarItem;
    private javax.swing.JButton btConfirmarPgto;
    private javax.swing.JButton btConsultarFornecedor;
    private javax.swing.JButton btConsultarProduto;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btFornecedor;
    private javax.swing.JButton btRemoverItem;
    private javax.swing.JButton btSelecionarFornecedor;
    private javax.swing.JButton btSelecionarProduto;
    private javax.swing.JComboBox<String> cbFiltroFornecedor;
    private javax.swing.JComboBox<String> cbFiltroProduto;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JComboBox<String> cbTipoMovimentacao;
    private javax.swing.JDialog consultarFornecedor;
    private javax.swing.JDialog consultarProduto;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblDataHora;
    private javax.swing.JLabel lblFornecedor;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JLabel lblQtd1;
    private javax.swing.JLabel lblTipoMovimentacao;
    private javax.swing.JLabel lblTotalCompra;
    private javax.swing.JDialog pagamento;
    private javax.swing.JScrollPane scrollPaneCompraItem;
    private javax.swing.JScrollPane scrollPaneFornecedor;
    private javax.swing.JScrollPane scrollPaneProduto;
    private javax.swing.JSpinner spnQtd;
    private javax.swing.JSpinner spnQtd1;
    private javax.swing.JTable tabelaCompraItem;
    private javax.swing.JTable tabelaFornecedor;
    private javax.swing.JTable tabelaProduto;
    private javax.swing.JCTextField txtConsultaFornecedor;
    private javax.swing.JCTextField txtConsultaProduto;
    private javax.swing.JCTextField txtData;
    @Bindable(field = "fornecedor")
    private javax.swing.JCTextField txtFornecedor;
    private javax.swing.JCTextField txtProduto;
    @Bindable(field = "vlTotalCompra")
    private javax.swing.JCFormattedTextField txtTotalCompra;
    // End of variables declaration//GEN-END:variables
    
} // Fim da classe CompraView
